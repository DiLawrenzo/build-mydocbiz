{"version":3,"file":"static/js/835.3616d2a2.chunk.js","mappings":"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","sources":["components/BackToTop.tsx","components/form/VerticalForm.tsx","components/form/FormInput.tsx","components/navbars/Navbar4/Menu.tsx","components/navbars/Navbar4/NotificationDropdown.tsx","components/navbars/Navbar4/ProfileDropdown.tsx","components/navbars/Navbar4/data.ts","components/navbars/Navbar4/index.tsx","pages/other/Contact/Hero.tsx","pages/other/Contact/ContactUs.tsx","pages/other/Contact/index.tsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport FeatherIcon from 'feather-icons-react';\nimport classNames from 'classnames';\n\ntype BackToTopProps = {\n    variant: string;\n};\n\nconst BackToTop = ({ variant }: BackToTopProps) => {\n    return (\n        <Link\n            className={classNames('btn', 'btn-soft-' + variant, 'shadow-none', 'btn-icon', 'btn-back-to-top')}\n            id=\"btn-back-to-top\"\n            to=\"#\"\n            onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}\n        >\n            <FeatherIcon icon=\"arrow-up\" className=\"icon-xxs\" />\n        </Link>\n    );\n};\n\nBackToTop.defaultProps = {\n    variant: 'primary',\n};\n\nexport default BackToTop;\n","import React from 'react';\nimport { useForm, Resolver, SubmitHandler, DefaultValues } from 'react-hook-form';\n\ntype VerticalFromProps<TFormValues> = {\n    defaultValues?: DefaultValues<TFormValues>;\n    resolver?: Resolver<TFormValues>;\n    children?: React.ReactNode;\n    onSubmit: SubmitHandler<TFormValues>;\n    formClass?: string;\n};\n\nconst VerticalForm = <TFormValues extends Record<string, any> = Record<string, any>>({\n    defaultValues,\n    resolver,\n    children,\n    onSubmit,\n    formClass,\n}: VerticalFromProps<TFormValues>) => {\n    /*\n     * form methods\n     */\n    const methods = useForm<TFormValues>({ defaultValues, resolver });\n    const {\n        handleSubmit,\n        register,\n        control,\n        formState: { errors },\n    } = methods;\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)} className={formClass} noValidate>\n            {Array.isArray(children)\n                ? children.map((child) => {\n                      return child.props && child.props.name\n                          ? React.createElement(child.type, {\n                                ...{\n                                    ...child.props,\n                                    register,\n                                    key: child.props.name,\n                                    errors,\n                                    control,\n                                },\n                            })\n                          : child;\n                  })\n                : children}\n        </form>\n    );\n};\n\nexport default VerticalForm;\n","import React, { InputHTMLAttributes } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\n\nimport { FieldErrors, Control } from 'react-hook-form';\n\ninterface FormInputProps extends InputHTMLAttributes<HTMLInputElement> {\n    startIcon?: React.ReactNode;\n    label?: string;\n    type?: string;\n    name: string;\n    comp?: string;\n    placeholder?: string;\n    register?: any;\n    errors?: FieldErrors;\n    control?: Control<any>;\n    className?: string;\n    labelClassName?: string;\n    containerClass?: string;\n    textClassName?: string;\n    refCallback?: any;\n    action?: React.ReactNode;\n    rows?: string | number;\n}\n\n// textual form-controls—like inputs, passwords, textareas etc.\nconst TextualInput = ({\n    type,\n    name,\n    placeholder,\n    register,\n    errors,\n    comp,\n    rows,\n    className,\n    refCallback,\n    ...otherProps\n}: FormInputProps) => {\n    return (\n        <>\n            <Form.Control\n                type={type}\n                placeholder={placeholder}\n                name={name}\n                as={comp}\n                id={name}\n                ref={(r: HTMLInputElement) => {\n                    if (refCallback) refCallback(r);\n                }}\n                className={className}\n                isInvalid={errors && errors[name] ? true : false}\n                {...(register ? register(name) : {})}\n                rows={rows}\n                {...otherProps}\n            ></Form.Control>\n\n            {errors && errors[name] && (\n                <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                    {errors[name]['message']}\n                </Form.Control.Feedback>\n            )}\n        </>\n    );\n};\n\n// non-textual checkbox and radio controls\nconst CheckInput = ({\n    type,\n    label,\n    name,\n    placeholder,\n    register,\n    errors,\n    comp,\n    rows,\n    className,\n    refCallback,\n    ...otherProps\n}: FormInputProps) => {\n    return (\n        <>\n            <Form.Check\n                type={type}\n                label={label}\n                name={name}\n                id={name}\n                ref={(r: HTMLInputElement) => {\n                    if (refCallback) refCallback(r);\n                }}\n                className={className}\n                isInvalid={errors && errors[name] ? true : false}\n                {...(register ? register(name) : {})}\n                {...otherProps}\n            />\n\n            {errors && errors[name] && (\n                <Form.Control.Feedback type=\"invalid\">{errors[name]['message']}</Form.Control.Feedback>\n            )}\n        </>\n    );\n};\n\n// handle select controls\nconst SelectInput = ({\n    type,\n    label,\n    name,\n    placeholder,\n    register,\n    errors,\n    comp,\n    rows,\n    className,\n    refCallback,\n    ...otherProps\n}: FormInputProps) => {\n    return (\n        <>\n            <Form.Select\n                type={type}\n                label={label}\n                name={name}\n                id={name}\n                ref={(r: HTMLInputElement) => {\n                    if (refCallback) refCallback(r);\n                }}\n                className={className}\n                isInvalid={errors && errors[name] ? true : false}\n                {...(register ? register(name) : {})}\n                {...otherProps}\n            />\n\n            {errors && errors[name] && (\n                <Form.Control.Feedback type=\"invalid\">{errors[name]['message']}</Form.Control.Feedback>\n            )}\n        </>\n    );\n};\n\n// extend textual form-controls with add-ons\nconst FormInputGroup = ({\n    startIcon,\n    type,\n    name,\n    placeholder,\n    comp,\n    register,\n    errors,\n    rows,\n    className,\n    textClassName,\n    refCallback,\n    ...otherProps\n}: FormInputProps) => {\n    return (\n        <InputGroup>\n            <InputGroup.Text className={textClassName}>{startIcon}</InputGroup.Text>\n            {type === 'select' ? (\n                <SelectInput\n                    type={type}\n                    name={name}\n                    placeholder={placeholder}\n                    refCallback={refCallback}\n                    comp={comp}\n                    errors={errors}\n                    register={register}\n                    className={className}\n                    rows={rows}\n                    {...otherProps}\n                />\n            ) : (\n                <TextualInput\n                    type={type}\n                    name={name}\n                    placeholder={placeholder}\n                    refCallback={refCallback}\n                    comp={comp}\n                    errors={errors}\n                    register={register}\n                    className={className}\n                    rows={rows}\n                    {...otherProps}\n                />\n            )}\n        </InputGroup>\n    );\n};\n\nconst FormInput = ({\n    startIcon,\n    label,\n    type,\n    name,\n    placeholder,\n    register,\n    errors,\n    control,\n    className,\n    labelClassName,\n    containerClass,\n    textClassName,\n    refCallback,\n    action,\n    rows,\n    ...otherProps\n}: FormInputProps) => {\n    // handle input type\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : 'input';\n\n    return (\n        <>\n            {type === 'hidden' ? (\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\n            ) : (\n                <>\n                    {type === 'checkbox' || type === 'radio' ? (\n                        <Form.Group className={containerClass}>\n                            <CheckInput\n                                type={type}\n                                label={label}\n                                name={name}\n                                placeholder={placeholder}\n                                refCallback={refCallback}\n                                errors={errors}\n                                register={register}\n                                comp={comp}\n                                className={className}\n                                rows={rows}\n                                {...otherProps}\n                            />\n                        </Form.Group>\n                    ) : type === 'select' ? (\n                        <Form.Group className={containerClass}>\n                            {label && (\n                                <>\n                                    <Form.Label className={labelClassName}>{label}</Form.Label>\n                                    {action && action}\n                                </>\n                            )}\n                            {startIcon ? (\n                                <FormInputGroup\n                                    type={type}\n                                    startIcon={startIcon}\n                                    name={name}\n                                    comp={comp}\n                                    textClassName={textClassName}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors}\n                                    register={register}\n                                    className={className}\n                                    rows={rows}\n                                    {...otherProps}\n                                />\n                            ) : (\n                                <SelectInput\n                                    type={type}\n                                    name={name}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors}\n                                    register={register}\n                                    comp={comp}\n                                    className={className}\n                                    rows={rows}\n                                    {...otherProps}\n                                />\n                            )}\n                        </Form.Group>\n                    ) : (\n                        <Form.Group className={containerClass}>\n                            {label && (\n                                <>\n                                    <Form.Label className={labelClassName}>{label}</Form.Label>\n                                    {action && action}\n                                </>\n                            )}\n                            {startIcon ? (\n                                <FormInputGroup\n                                    type={type}\n                                    startIcon={startIcon}\n                                    name={name}\n                                    comp={comp}\n                                    textClassName={textClassName}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors}\n                                    register={register}\n                                    className={className}\n                                    rows={rows}\n                                    {...otherProps}\n                                />\n                            ) : (\n                                <TextualInput\n                                    type={type}\n                                    name={name}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors}\n                                    register={register}\n                                    comp={comp}\n                                    className={className}\n                                    rows={rows}\n                                    {...otherProps}\n                                />\n                            )}\n                        </Form.Group>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default FormInput;\n","import { Nav } from 'react-bootstrap';\nimport { useLocation } from 'react-router-dom';\nimport FeatherIcon from 'feather-icons-react';\nimport classNames from 'classnames';\n\n\n\nconst Menu = () => {\n    let location = useLocation();\n    const isActiveRoute = (path: string) => {\n        if (location.pathname) {\n            return location.pathname.includes(path);\n        }\n        return false;\n    };\n\n    return (\n        <Nav as=\"ul\" className=\"mx-auto\">\n            <Nav.Item as=\"li\" className=\"pe-3\">\n                <Nav.Link href=\"/pages/account/dashboard\" className={classNames('nav-link', ({ ...isActive }) => isActive && 'active')}>\n                    <div className=\"d-flex align-items-center\">\n                        <span className=\"icon-xxs me-1 flex-shrink-0\">\n                            <FeatherIcon icon=\"grid\" className=\"icon-dual-primary\" />\n                        </span>\n                        <div className=\"flex-grow-1\">Home</div>\n                    </div>\n                </Nav.Link>\n            </Nav.Item>\n\n            <Nav.Item as=\"li\" className=\"pe-3\">\n                <Nav.Link href=\"/pages/account/add-post\">\n                    <div className=\"d-flex align-items-center\">\n                        <span className=\"icon-xxs me-1 flex-shrink-0\">\n                            <FeatherIcon icon=\"folder\" className=\"icon-dual-dark\" />\n                        </span>\n                        <div className=\"flex-grow-1\">Add Post</div>\n                    </div>\n                </Nav.Link>\n            </Nav.Item>\n\n            <Nav.Item as=\"li\" className=\"pe-3\">\n                <Nav.Link href=\"/pages/account/settings\">\n                    <div className=\"d-flex align-items-center\">\n                        <span className=\"icon-xxs me-1 flex-shrink-0\">\n                            <FeatherIcon icon=\"tool\" className=\"icon-dual-dark\" />\n                        </span>\n                        <div className=\"flex-grow-1\">Settings</div>\n                    </div>\n                </Nav.Link>\n            </Nav.Item>\n\n            {/* <Nav.Item as=\"li\" className=\"pe-3\">\n                <Nav.Link href=\"/\">\n                    <div className=\"d-flex align-items-center\">\n                        <span className=\"icon-xxs me-1 flex-shrink-0\">\n                            <FeatherIcon icon=\"list\" className=\"icon-dual-dark\" />\n                        </span>\n                        <div className=\"flex-grow-1\">Tasks</div>\n                    </div>\n                </Nav.Link>\n            </Nav.Item>\n\n            <Nav.Item as=\"li\" className=\"pe-3\">\n                <Nav.Link href=\"/\">\n                    <div className=\"d-flex align-items-center\">\n                        <span className=\"icon-xxs me-1 flex-shrink-0\">\n                            <FeatherIcon icon=\"bar-chart-2\" className=\"icon-dual-dark\" />\n                        </span>\n                        <div className=\"flex-grow-1\">Reports</div>\n                    </div>\n                </Nav.Link>\n            </Nav.Item> */}\n        </Nav>\n    );\n};\n\nexport default Menu;\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Dropdown, Nav } from 'react-bootstrap';\nimport FeatherIcon from 'feather-icons-react';\n\n// types\nimport { Notification } from './types';\n\ntype NotificationProps = {\n    notifications: Notification[];\n};\n\nconst NotificationDropdown = ({ notifications }: NotificationProps) => {\n    return (\n        <Dropdown as=\"li\" className=\"nav-item\">\n            <Dropdown.Toggle as={Nav.Link} id=\"notifications\">\n                <span className=\"icon-xs\">\n                    <FeatherIcon icon=\"bell\" className=\"icon-dual-dark\" />\n                </span>\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu className=\"p-2\" renderOnMount>\n                {(notifications || []).map((notification, index) => {\n                    return (\n                        <Dropdown.Item className=\"p-2\" key={index.toString()}>\n                            <div className=\"d-flex align-items-center\">\n                                <span\n                                    className={classNames(\n                                        'bg-soft-' + notification.variant,\n                                        'text-' + notification.variant,\n                                        'avatar',\n                                        'avatar-xs',\n                                        'rounded icon',\n                                        'icon-with-bg',\n                                        'icon-xxs',\n                                        'me-3',\n                                        'flex-shink-0'\n                                    )}\n                                >\n                                    <FeatherIcon\n                                        icon={notification.icon}\n                                        className={classNames('icon-dual-' + notification.variant)}\n                                    />\n                                </span>\n                                <div className=\"flex-grow-1\">\n                                    <h6 className=\"fw-medium my-0 fs-13\">{notification.text}</h6>\n                                    <span className=\"text-muted\">\n                                        <small>{notification.time}</small>\n                                    </span>\n                                </div>\n                            </div>\n                        </Dropdown.Item>\n                    );\n                })}\n                <Link to=\"#\" className=\"btn btn-light btn-sm bg-light text-center fs-13 d-block mt-2\">\n                    View All\n                </Link>\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default NotificationDropdown;\n","import React from 'react';\nimport { Dropdown, Nav } from 'react-bootstrap';\nimport FeatherIcon from 'feather-icons-react';\n\n// images\nimport user from 'assets/images/avatars/img-8.jpg';\n\n// types\nimport { ProfileOption } from './types';\n\ntype ProfileProps = {\n    profileOptions: ProfileOption[];\n};\n\nconst ProfileDropdown = ({ profileOptions }: ProfileProps) => {\n    return (\n        <Dropdown as=\"li\" className=\"nav-item\">\n            <Dropdown.Toggle as={Nav.Link} id=\"user\">\n                <div className=\"d-flex align-items-center\">\n                    <div className=\"flex-shrink-0\">\n                        <img src={user} alt=\"user\" className=\"avatar avatar-xs rounded-circle me-2\" />\n                    </div>\n                    <div className=\"flex-grow-1 ms-1 lh-base\">\n                        <span className=\"fw-semibold fs-13 d-block line-height-normal\">Esther G</span>\n                        <span className=\"text-muted fs-13\">Admin</span>\n                    </div>\n                </div>\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu className=\"p-2\" renderOnMount>\n                {(profileOptions || []).map((profile, index) => {\n                    return (\n                        <React.Fragment key={index.toString()}>\n                            {index === profileOptions.length - 1 && <Dropdown.Divider as=\"div\" />}\n                            <Dropdown.Item className=\"p-2\">\n                                <FeatherIcon icon={profile.icon} className=\"icon icon-xxs me-1 icon-dual\" />\n                                {profile.label}\n                            </Dropdown.Item>\n                        </React.Fragment>\n                    );\n                })}\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default ProfileDropdown;\n","// types\nimport { Notification, ProfileOption } from './types';\n\nconst notifications: Notification[] = [\n    {\n        icon: 'user-plus',\n        variant: 'primary',\n        text: 'New User Registered',\n        time: '2 min ago',\n    },\n    {\n        icon: 'message-square',\n        variant: 'orange',\n        text: 'A new comment on your post',\n        time: '3 min ago',\n    },\n    {\n        icon: 'paperclip',\n        variant: 'success',\n        text: 'A new message from',\n        time: '10 min ago',\n    },\n    {\n        icon: 'heart',\n        variant: 'danger',\n        text: 'A new like on your comment',\n        time: '14 min ago',\n    },\n];\n\nconst profileOptions: ProfileOption[] = [\n    {\n        icon: 'user',\n        label: 'Profile',\n        redirectTo: '#',\n    },\n    {\n        icon: 'settings',\n        label: 'Settings',\n        redirectTo: '/pages/account/settings',\n    },\n    {\n        icon: 'unlock',\n        label: 'Sign Out',\n        redirectTo: '/home',\n    },\n];\n\nexport { notifications, profileOptions };\n","import { Container, Nav, Navbar } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// component\nimport Menu from './Menu';\nimport NotificationDropdown from './NotificationDropdown';\nimport ProfileDropdown from './ProfileDropdown';\n\n// dummy data\nimport { notifications, profileOptions } from './data';\n\n// images\nimport logo from 'assets/images/logo.png';\nimport logoLight from 'assets/images/logo-light.png';\n\ntype Navbar4Props = {\n    isSticky?: boolean;\n    navClass?: string;\n    fixedWidth?: boolean;\n};\n\nconst Navbar4 = ({ isSticky, navClass, fixedWidth }: Navbar4Props) => {\n    return (\n        <header>\n            <Navbar\n                id={isSticky ? 'sticky' : ''}\n                collapseOnSelect\n                expand=\"lg\"\n                className={classNames('topnav-menu', navClass)}\n            >\n                <Container fluid={!fixedWidth}>\n                    <Navbar.Brand href=\"/\" className=\"logo\">\n                        <img src={logo} height=\"30\" className=\"align-top logo-dark\" alt=\"\" />\n                        <img src={logoLight} height=\"30\" className=\"align-top logo-light\" alt=\"\" />\n                    </Navbar.Brand>\n\n                    <Navbar.Toggle className=\"me-3\" aria-controls=\"topnav-menu-content4\" />\n\n                    <Navbar.Collapse id=\"topnav-menu-content4\">\n                        <Menu />\n                        <Nav as=\"ul\" className=\"align-items-lg-center\">\n                            <NotificationDropdown notifications={notifications} />\n                            <ProfileDropdown profileOptions={profileOptions} />\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    );\n};\n\nexport default Navbar4;\n","import { Col, Container, Row } from 'react-bootstrap';\n\nconst Hero = () => {\n    return (\n        <section className=\"hero-4 pt-lg-6 pb-sm-9 pb-6 pt-9\">\n            <Container>\n                <Row className=\"justify-content-center\">\n                    <Col lg={7} className=\"text-center\">\n                        <h1 className=\"hero-title mb-0\">Contact Us</h1>\n                        <p className=\"mb-4 fs-17 text-muted\">\n                            Please fill out the following form and we will get back to you shortly\n                        </p>\n                    </Col>\n                </Row>\n            </Container>\n            <div className=\"shape bottom\">\n                <svg\n                    width=\"1440px\"\n                    height=\"40px\"\n                    viewBox=\"0 0 1440 40\"\n                    version=\"1.1\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <g id=\"shape-b\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                        <g id=\"curve\" fill=\"#fff\">\n                            <path\n                                d=\"M0,30.013 C239.659,10.004 479.143,0 718.453,0 C957.763,0 1198.28,10.004 1440,30.013 L1440,40 L0,40 L0,30.013 Z\"\n                                id=\"Path\"\n                            ></path>\n                        </g>\n                    </g>\n                </svg>\n            </div>\n        </section>\n    );\n};\n\nexport default Hero;\n","import { Button, Card, Col, Container, Row } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport GoogleMapReact from 'google-map-react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport FeatherIcon from 'feather-icons-react';\n\n// components\nimport { FormInput } from 'components/form';\nimport desktop1 from 'assets/images/other/marketing.png';\n\nconst ContactUs = () => {\n    // form validation schema\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            fname: yup.string().required('Please enter first name'),\n            lname: yup.string().required('Please enter last name'),\n            email: yup.string().required('Please enter Email').email('Please enter valid Email'),\n            message: yup.string().required('Please enter Message'),\n        })\n    );\n\n    // form method\n    const methods = useForm({ resolver: schemaResolver });\n    const {\n        handleSubmit,\n        register,\n        control,\n        formState: { errors },\n    } = methods;\n\n    // handle form submission\n    const onSubmit = () => { };\n\n    return (\n        <section className=\"section pb-lg-7 py-4 position-relative\">\n            <Container>\n                <Row className=\"align-items-center\">\n                    <Col lg={6}>\n                        <Card className=\"shadow-none\">\n                            <Card.Body className=\"p-xl-5 p-0\">\n                                <h2 className=\"mb-2 mt-0 fw-medium\">Let's Talk Further</h2>\n                                <p className=\"mb-5\">\n                                    Please fill out the following form and we will get back to you shortly\n                                </p>\n\n                                <form onSubmit={handleSubmit(onSubmit)}>\n                                    <Row>\n                                        <Col md={6}>\n                                            <FormInput\n                                                type=\"text\"\n                                                name=\"fname\"\n                                                label=\"First Name\"\n                                                placeholder=\"Your First Name\"\n                                                containerClass={'mb-3'}\n                                                register={register}\n                                                errors={errors}\n                                                control={control}\n                                            />\n                                        </Col>\n                                        <Col md={6}>\n                                            <FormInput\n                                                type=\"text\"\n                                                name=\"lname\"\n                                                label=\"Last Name\"\n                                                placeholder=\"Your Last Name\"\n                                                containerClass={'mb-3'}\n                                                register={register}\n                                                errors={errors}\n                                                control={control}\n                                            />\n                                        </Col>\n                                        <Col lg={12}>\n                                            <FormInput\n                                                type=\"email\"\n                                                name=\"email\"\n                                                label=\"Email Name\"\n                                                placeholder=\"Your Email\"\n                                                containerClass={'mb-3'}\n                                                register={register}\n                                                errors={errors}\n                                                control={control}\n                                            />\n                                        </Col>\n                                        <Col lg={12}>\n                                            <FormInput\n                                                type=\"textarea\"\n                                                name=\"message\"\n                                                label=\"Message\"\n                                                placeholder=\"Type Your message...\"\n                                                rows={5}\n                                                containerClass={'mb-3'}\n                                                register={register}\n                                                errors={errors}\n                                                control={control}\n                                            />\n                                        </Col>\n                                        <Col lg=\"auto\" className=\"mb-0\">\n                                            <Button type=\"submit\">\n                                                Send\n                                                <span className=\"icon icon-xs text-white ms-1\">\n                                                    <FeatherIcon icon=\"send\" />\n                                                </span>\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </form>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n\n                    <Col lg={{ offset: 1, span: 5 }}>\n                        <div style={{ height: '520px' }}>\n                            {/* <GoogleMapReact defaultZoom={12} defaultCenter={{ lat: 40.749179, lng: -73.989276 }} /> */}\n                            <img\n                                src={desktop1}\n                                alt=\"desktop1\"\n                                className=\"img-fluid\"\n                                data-aos=\"fade-left\"\n                                data-aos-duration=\"700\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n                <Row className=\"mt-5 align-items-center\">\n                    <Col md={4}>\n                        <div className=\"d-flex px-md-1 px-lg-5 mb-md-0 mb-3\">\n                            <span className=\"bg-soft-primary avatar avatar-sm rounded icon icon-with-bg icon-xs text-primary me-3 flex-shrink-0\">\n                                <FeatherIcon icon=\"mail\" className=\"icon-dual-primary\" />\n                            </span>\n                            <div className=\"flex-grow-1\">\n                                <h5 className=\"m-0 fw-medium\">Email</h5>\n                                <Link to=\"#\" className=\"text-muted fw-normal h5 my-1\">\n                                    support@mydocbiz.com\n                                </Link>\n                            </div>\n                        </div>\n                    </Col>\n\n                    <Col md={4}>\n                        <div className=\"d-flex px-md-1 px-lg-5 mb-md-0 mb-3\">\n                            <span className=\"bg-soft-orange avatar avatar-sm rounded icon icon-with-bg icon-xs text-orange me-3 flex-shrink-0\">\n                                <FeatherIcon icon=\"phone-call\" className=\"icon-dual-orange\" />\n                            </span>\n                            <div className=\"flex-grow-1\">\n                                <h5 className=\"m-0 fw-medium\">Phone</h5>\n                                <Link to=\"#\" className=\"text-muted fw-normal h5 my-1\">\n                                    +254 704 322 687\n                                </Link>\n                            </div>\n                        </div>\n                    </Col>\n\n                    <Col md={4}>\n                        <div className=\"d-flex px-md-1 px-lg-5 mb-md-0 mb-3\">\n                            <span className=\"bg-soft-info avatar avatar-sm rounded icon icon-with-bg icon-xs text-info me-3 flex-shrink-0\">\n                                <FeatherIcon icon=\"map-pin\" className=\"icon-dual-info\" />\n                            </span>\n                            <div className=\"flex-grow-1\">\n                                <h5 className=\"m-0 fw-medium\">Address</h5>\n                                <Link to=\"#\" className=\"text-muted fw-normal h5 my-1\">\n                                    Nairobi, Kenya (East Africa)\n                                </Link>\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </section>\n    );\n};\n\nexport default ContactUs;\n","// components\nimport { Navbar1 } from 'components/navbars';\nimport BackToTop from 'components/BackToTop';\nimport { Footer1 } from 'components/footer';\n\nimport Hero from './Hero';\nimport ContactUs from './ContactUs';\n\nconst Contact = () => {\n    return (\n        <>\n            <div className=\"header-7 bg-gradient2\">\n                <Navbar1\n                    hideSearch\n                    fixedWidth\n                    navClass=\"navbar-light zindex-10\"\n                    buttonClass=\"btn-outline-secondary btn-sm\"\n                />\n\n                <Hero />\n            </div>\n\n            {/* contact us */}\n            <ContactUs />\n\n            {/* footer */}\n            <Footer1 />\n\n            <BackToTop />\n        </>\n    );\n};\n\nexport default Contact;\n"],"names":["BackToTop","variant","className","classNames","id","to","onClick","window","scrollTo","top","behavior","icon","defaultProps","defaultValues","resolver","children","onSubmit","formClass","methods","useForm","handleSubmit","register","control","errors","formState","noValidate","Array","isArray","map","child","props","name","React","type","key","TextualInput","placeholder","comp","rows","refCallback","otherProps","Form","as","ref","r","isInvalid","CheckInput","label","SelectInput","FormInputGroup","startIcon","textClassName","InputGroup","labelClassName","containerClass","action","useLocation","Nav","href","notifications","Dropdown","renderOnMount","notification","index","text","time","toString","profileOptions","src","user","alt","profile","length","redirectTo","isSticky","navClass","fixedWidth","Navbar","collapseOnSelect","expand","Container","fluid","logo","height","logoLight","Row","Col","lg","width","viewBox","version","xmlns","stroke","strokeWidth","fill","fillRule","d","schemaResolver","yupResolver","yup","shape","fname","required","lname","email","message","Card","md","Button","offset","span","style","desktop1","hideSearch","buttonClass"],"sourceRoot":""}