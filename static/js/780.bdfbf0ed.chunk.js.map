{"version":3,"file":"static/js/780.bdfbf0ed.chunk.js","mappings":"gGAOA,IAMIA,EAAkB,GAElBC,EAAgD,oBAAjBC,aAEnC,SAASC,EAAGC,EAAKC,GAAO,OAAO,EAAM,EAAMA,EAAM,EAAMD,EACvD,SAASE,EAAGF,EAAKC,GAAO,OAAO,EAAMA,EAAM,EAAMD,EACjD,SAASG,EAAGH,GAAY,OAAO,EAAMA,EAGrC,SAASI,EAAYC,EAAIL,EAAKC,GAAO,QAASF,EAAEC,EAAKC,GAAOI,EAAKH,EAAEF,EAAKC,IAAQI,EAAKF,EAAEH,IAAQK,EAG/F,SAASC,EAAUD,EAAIL,EAAKC,GAAO,OAAO,EAAMF,EAAEC,EAAKC,GAAOI,EAAKA,EAAK,EAAMH,EAAEF,EAAKC,GAAOI,EAAKF,EAAEH,GA4BnG,SAASO,EAAcC,GACrB,OAAOA,EAGTC,EAAOC,QAAU,SAAiBC,EAAKC,EAAKC,EAAKC,GAC/C,KAAM,GAAKH,GAAOA,GAAO,GAAK,GAAKE,GAAOA,GAAO,GAC/C,MAAM,IAAIE,MAAM,2CAGlB,GAAIJ,IAAQC,GAAOC,IAAQC,EACzB,OAAOP,EAKT,IADA,IAAIS,EAAenB,EAAwB,IAAIC,aAvD1B,IAuD2D,IAAImB,MAvD/D,IAwDZC,EAAI,EAAGA,EAxDK,KAwDmBA,EACtCF,EAAaE,GAAKd,EAAWc,EAAItB,EAAiBe,EAAKE,GAGzD,SAASM,EAAUC,GAKjB,IAJA,IAAIC,EAAgB,EAChBC,EAAgB,EACHC,KAEVD,GAAgCN,EAAaM,IAAkBF,IAAME,EAC1ED,GAAiBzB,IAEjB0B,EAGF,IACIE,EAAYH,GADJD,EAAKJ,EAAaM,KAAmBN,EAAaM,EAAgB,GAAKN,EAAaM,IACzD1B,EAEnC6B,EAAenB,EAASkB,EAAWb,EAAKE,GAC5C,OAAIY,GA/Ee,KAiCvB,SAA+BL,EAAIM,EAASf,EAAKE,GAChD,IAAK,IAAIK,EAAI,EAAGA,EAnCO,IAmCkBA,EAAG,CAC1C,IAAIS,EAAerB,EAASoB,EAASf,EAAKE,GAC1C,GAAqB,IAAjBc,EACF,OAAOD,EAGTA,IADetB,EAAWsB,EAASf,EAAKE,GAAOO,GACzBO,EAExB,OAAOD,EAsCKE,CAAqBR,EAAII,EAAWb,EAAKE,GACtB,IAAjBY,EACFD,EA/Db,SAA0BJ,EAAIS,EAAIC,EAAInB,EAAKE,GACzC,IAAIkB,EAAUC,EAAUd,EAAI,EAC5B,IAEEa,EAAW3B,EADX4B,EAAWH,GAAMC,EAAKD,GAAM,EACIlB,EAAKE,GAAOO,GAC7B,EACbU,EAAKE,EAELH,EAAKG,QAEAC,KAAKC,IAAIH,GA5BQ,QA4B+Bb,EA3B1B,IA4B/B,OAAOc,EAsDIG,CAAgBf,EAAIC,EAAeA,EAAgBzB,EAAiBe,EAAKE,GAIpF,OAAO,SAAuBL,GAE5B,OAAU,IAANA,EACK,EAEC,IAANA,EACK,EAEFJ,EAAWe,EAASX,GAAII,EAAKE,M,4JChGlCsB,EAAqBC,EAAAA,YAAiB,WAQzCC,GAAQ,IAPTC,EAOS,EAPTA,SACAC,EAMS,EANTA,GACAC,EAKS,EALTA,KACAC,EAIS,EAJTA,KACAC,EAGS,EAHTA,UAGS,IAFTC,GAAIC,OAEK,MAFO,OAEP,EADNC,GACM,YACHC,GAASC,EAAAA,EAAAA,IAAmBT,EAAU,SAC5C,OAAoBU,EAAAA,EAAAA,KAAKJ,GAAD,QAAC,QACvBP,IAAKA,GACFQ,GAFmB,IAGtBH,UAAWO,GAAAA,CAAWP,EAAWI,EAAQN,GAAQ,eAAgBC,GAAQ,QAAJ,OAAYA,GAAQF,GAAM,MAAJ,OAAUA,UAGzGJ,EAAMe,YAAc,QACpBf,EAAMgB,aArBe,CACnBZ,GAAI,UACJC,MAAM,GAoBR,O,+FCTA,EAeA,EAMA,EAMA,EAUA,EAqEA,E,mBChHaY,EAYX,YACEC,KAAA,OAAcC,EAAd,OACAD,KAAA,OAAcC,EAAd,OACAD,KAAA,KAAYC,EAAZ,KACAD,KAAA,KAAYC,EAAZ,KAEAD,KAAA,OAAcA,KAAKE,KAAOF,KAA1B,OACAA,KAAA,OAAcA,KAAKG,KAAOH,KAA1B,OAGAA,KAAA,iBAAwBC,EAAAA,kBAAxB,EACAD,KAAA,eAAsBC,EAAAA,gBAAtB,EACAD,KAAA,iBAAwBC,EAAAA,kBAAxB,EACAD,KAAA,eAAsBC,EAAAA,gBAAtB,G,iNDnBJ,SAAYG,GACVA,EAAAA,MAAAA,QACAA,EAAAA,WAAAA,aACAA,EAAAA,WAAAA,aACAA,EAAAA,OAAAA,SACAA,EAAAA,QAAAA,UACAA,EAAAA,QAAAA,UACAA,EAAAA,QAAAA,UACAA,EAAAA,MAAAA,QACAA,EAAAA,OAAAA,SACAA,EAAAA,OAAAA,SACAA,EAAAA,OAAAA,SACAA,EAAAA,QAAAA,UAZF,CAAYA,IAAAA,EAAZ,KAeA,SAAYC,GACVA,EAAAA,GAAAA,KACAA,EAAAA,KAAAA,IAFF,CAAYA,IAAAA,EAAZ,KAMA,SAAYC,GACVA,EAAAA,IAAAA,MACAA,EAAAA,KAAAA,OACAA,EAAAA,IAAAA,MAHF,CAAYA,IAAAA,EAAZ,KAMA,SAAYC,GACVA,EAAAA,IAAAA,GADF,CAAYA,IAAAA,EAAZ,KAUA,SAAYC,GACVA,EAAAA,SAAAA,WACAA,EAAAA,WAAAA,aAFF,CAAYA,IAAAA,EAAZ,KAqEA,SAAYC,GACVA,EAAAA,KAAAA,OACAA,EAAAA,OAAAA,SACAA,EAAAA,QAAAA,UACAA,EAAAA,UAAAA,YACAA,EAAAA,WAAAA,aACAA,EAAAA,YAAAA,cACAA,EAAAA,YAAAA,cACAA,EAAAA,YAAAA,cACAA,EAAAA,WAAAA,aACAA,EAAAA,WAAAA,aACAA,EAAAA,WAAAA,aACAA,EAAAA,YAAAA,cACAA,EAAAA,aAAAA,eACAA,EAAAA,aAAAA,eACAA,EAAAA,aAAAA,eACAA,EAAAA,YAAAA,cACAA,EAAAA,YAAAA,cACAA,EAAAA,YAAAA,cACAA,EAAAA,cAAAA,gBACAA,EAAAA,eAAAA,iBACAA,EAAAA,eAAAA,iBACAA,EAAAA,eAAAA,iBACAA,EAAAA,cAAAA,gBACAA,EAAAA,cAAAA,gBACAA,EAAAA,cAAAA,gBACAA,EAAAA,WAAAA,aACAA,EAAAA,YAAAA,cACAA,EAAAA,cAAAA,gBA5BF,CAAYA,IAAAA,EAAZ,KEvHA,IAAIC,EAAJ,E,ICDaC,EAAb,WAQE,cAKE,IAAIC,EAAOC,EAAAA,GAAX,wBAGA,GAAIA,EAAAA,KAAJ,gBAAkC,CAChC,IAAMC,EAAaD,EAAAA,KAAAA,gBAAnB,wBACAD,EAAO,EAAH,MAEFG,IAAKH,EAAAA,IAAWE,EAFd,IAGFE,MAAOJ,EAAAA,MAAaE,EAHlB,KAIFG,OAAQL,EAAAA,OAAcE,EAJpB,IAKFI,KAAMN,EAAAA,KAAYE,EAAWI,OAGjClB,KAAA,OAAca,EAAAA,GAAd,aACAb,KAAA,MAAaa,EAAAA,GAAb,YACAb,KAAA,KAAYY,EAAZ,KACAZ,KAAA,MAAaY,EAAb,MACAZ,KAAA,IAAWY,EAAX,IACAZ,KAAA,OAAcY,EAAd,OAEIC,EAAJ,YACEb,KAAA,uBAA4Ba,EAA5B,YAlCN,0CAyCEM,SAAAA,GACE,IAAIC,EAAaC,EAAAA,IAAiBA,EAAlC,OACIC,EAAaD,EAAAA,KAAkBA,EAAnC,MACArB,KAAA,KAAYqB,EAAZ,IACArB,KAAA,OAAcqB,EAAd,MACArB,KAAA,QAAeqB,EAAf,OACArB,KAAA,MAAaqB,EAAb,KACArB,KAAA,UACAA,KAAA,UAjDJ,KCKauB,EAAc,CACzBhB,EADyB,IAEzBF,EAFyB,GAGzBA,EAHyB,KAIzBC,EAJyB,IAKzBA,EALyB,KAMzBA,EANK,KAaP,SAAgBkB,EACdC,EACAC,QAAAA,IAAAA,IAAAA,EAA6BrB,EAAM,MAEnC,IAAIsB,EAAwB,CAAEC,MAAF,EAAYC,KAAMH,GAE9C,wBAAWD,EAAqB,OAAOE,EAIvC,KAF+B,kBAARF,GAAvB,kBAAkDA,GAGhD,MAAM,IAAIhE,MAAV,sEAcF,GATAgE,EAAMK,OAANL,GACAE,EAAAA,MAAYI,WAAZJ,GAGAA,EAAAA,KAAWF,EAAAA,MAAAA,oBAAAA,IAAXE,GAG6BJ,EAAAA,SAAqBI,EAAlD,MAGE,MAAM,IAAIlE,MAAV,0BAGF,SC9CK,IAAMuE,EAA8B,CACzCC,KAAM,CAAC,IAAM,GAAK,IADuB,GAEzCC,OAAQ,CAAC,IAAM,EAAK,EAFqB,GAGzCC,QAAS,CAAC,EAAK,EAAK,IAHqB,GAIzCC,UAAW,CAAC,IAAM,EAAK,IAJkB,GAMzCC,WAAY,CAAC,IAAM,KAAO,IANe,KAOzCC,YAAa,CAAC,IAAM,KAAO,KAPc,KAQzCC,YAAa,CAAC,KAAO,IAAM,KARc,KASzCC,YAAa,CAAC,KAAO,IAAM,KATc,KAUzCC,WAAY,CAAC,IAAM,EAAK,KAViB,MAWzCC,WAAY,CAAC,IAAM,IAAM,KAXgB,MAYzCC,WAAY,CAAC,GAAK,IAAM,IAZiB,MAczCC,YAAa,CAAC,IAAM,IAAM,IAde,KAezCC,aAAc,CAAC,KAAO,IAAM,KAfa,GAgBzCC,aAAc,CAAC,KAAO,IAAM,IAhBa,GAiBzCC,aAAc,CAAC,IAAM,EAAK,IAjBe,GAkBzCC,YAAa,CAAC,IAAM,KAAO,KAlBc,GAmBzCC,YAAa,CAAC,IAAM,EAAK,IAnBgB,GAoBzCC,YAAa,CAAC,KAAO,IAAM,KApBc,GAsBzCC,cAAe,CAAC,KAAO,IAAM,KAtBY,MAuBzCC,eAAgB,CAAC,KAAO,KAAO,KAvBU,GAwBzCC,eAAgB,CAAC,IAAM,EAAK,KAxBa,GAyBzCC,eAAgB,CAAC,IAAM,EAAK,IAzBa,GA0BzCC,cAAe,CAAC,KAAO,IAAM,IA1BY,KA2BzCC,cAAe,CAAC,EAAK,EAAK,EA3Be,GA4BzCC,cAAe,CAAC,KAAO,KAAO,IA5BW,KA8BzCC,WAAY,CAAC,IAAD,SA9B6B,MA+BzCC,YAAa,CAAC,KAAO,KAAO,IA/Ba,OAgCzCC,cAAe,CAAC,KAAD,gB,SChCDC,EACdC,GAEA,GAAInG,MAAAA,QAAJ,GACE,OAAOoG,GAAAA,CAAOD,EAAD,GAAYA,EAAZ,GAAuBA,EAAvB,GAAkCA,EAA/C,IAEF,GACoB,kBAAXA,GADT,qBAES9B,EAAP,GACA,CACA,IAAMgC,EAAmBhC,EAAzB,GACA,OAAO+B,GAAAA,CAAOC,EAAD,GAAYA,EAAZ,GAAuBA,EAAvB,GAAkCA,EAA/C,KCJG,IAAMC,EAAmBC,OAAAA,OAAzB,GAEMC,EAET,CACFC,MADE,KAEFC,WAFE,IAGFC,WAHE,IAIFC,OAJE,MAKFC,QALE,MAMFC,QANE,MAOFC,QAPE,MAQFC,MARE,GASFC,OATE,GAUFC,OAVE,GAWFC,OAXE,GAYFC,QAAS,IAKX,SAAgBC,EACdxF,EACAyF,GAEA,IAAMC,EAAN,GA0DA,OAxDAjB,EAAAA,SAAyB,YACvB,IAAMkB,EAA8BhB,EAApC,GAIA,qBAAI,MAAO3E,OAAP,EAAOA,EAAP,IAAkC,CACpC,IAAMoC,EAAK,MAAGpC,OAAH,EAAGA,EAAd,GAEM4F,GAAQ,IAAOxD,GAAD,GAApB,KAEMyD,EAAc7D,EAHJ,IAAOI,GAAD,GAAtB,MAIM0D,EAAY9D,EAAlB,GAEM+D,EAAc,CAClBC,MAAOH,EADW,MAElBI,IAAKH,EAFa,MAGlBzD,KAAMwD,EAAYxD,MAIhBoD,IAAezE,EAAnB,WACE0E,EAAAA,WAAAA,GAIED,IAAezE,EAAnB,aACE0E,EAAAA,WAAAA,GAKJ,GAAIvH,MAAAA,QAAAA,MAAc6B,OAAd7B,EAAc6B,EAAlB,IAAiC,CAC/B,IAAMoC,EAAK,MAAGpC,OAAH,EAAGA,EAAd,GAEA,GAAI,qBAAOoC,EAAP,IAAJ,qBAA8CA,EAAP,GAAiC,CACtE,IAAMyD,EAAc7D,EAAiB,MAACI,OAAD,EAACA,EAAD,GAArC,GACM0D,EAAY9D,EAAiB,MAACI,OAAD,EAACA,EAAD,GAAnC,GAEMkC,EAASD,EAAoB,MAACjC,OAAD,EAACA,EAApC,IASA,GAPAsD,EAAAA,GAAqB,CACnBM,MAAOH,EADY,MAEnBI,IAAKH,EAFc,MAGnBzD,KAAMwD,EAHa,KAInBvB,OAAAA,GAGEuB,EAAAA,OAAqBC,EAAzB,KACE,MAAM,IAAI7H,MAAV,oFAQR,ECxFF,SAAgBiI,EAIdF,EAIAG,EAIAC,EAIA9B,GAGA,IAGI+B,GAHwBD,EAA5B,GAGA,EAOA,OAJA,IACEC,EAAS/B,EAAT+B,IAGF,EC3BF,SAAgBC,EACdN,EACAC,EACAM,GAIA,OAFiBA,GAAAA,GAAmBA,GAApC,ECNF,SAAgBC,EACdC,EACAC,GAaA,MAAO,CACLtE,MCtBJ,SACEA,EACAuE,EACAC,EACAC,EACAC,GAEA,OAASF,EAAD,IAAqBxE,EAAtB,IAA0C0E,EAA1C,GAAP,EDMcC,CACZ,oBAAON,EAAP,OAAsCA,EAAAA,OAAtC,GADwB,GAExB,MAAAA,OAAA,EAAAA,EAAA,QAFwB,GAGxB,MAAAA,OAAA,EAAAA,EAAA,MAHwB,IAA1B,GAUEpE,KAAI,MAAEoE,OAAF,EAAEA,EAAQpE,MEnBlB,IAAM2E,EAAoBtC,OAAA,kBACxB,SAAAuC,GAAC,kBAAIA,KAaP,SAAgBC,EACdC,EACAT,EACAU,GAEA,MACA,IAAMC,EA0BR,SACEF,EACAT,GAoBA,OAlB0BM,EAAA,QAAyB,cACjD,IAAMM,EAEJH,EAAAA,IAAgBX,EAAsBW,EAAD,GAFvC,GAIA,MAC0B,qBAAjBG,GAAP,qBACOA,EAAP,OAFF,qBAGSA,EAAP,KAEA,EAKKC,GAFaC,EAAN,IAAaF,EAAb,MAAkCA,EAAlC,KAAd,OAbF,IA9BkBG,CAAmBN,EAArC,GACM5B,EAKR,SACE4B,EACAT,GAEA,IAAMgB,EACJP,EAAO,SAAeX,EAAsBW,EAAO,QADrD,GAGA,GAC2B,qBAAlBO,GAAP,qBACOA,EAAP,OAFF,qBAGSA,EAAP,KAEA,SAKF,MAFiB,GAAGA,EAApB,MApBgBC,CAAiBR,EAAjC,GACAC,EAAAA,MAAAA,UAAAA,EACAA,EAAAA,MAAAA,QAAAA,GAoDF,SAAgBQ,EAAYC,GAC1B,IAAMT,EAAKS,EAAX,GACA,IACAT,EAAAA,MAAAA,UAAAA,GACAA,EAAAA,MAAAA,QAAAA,I,SCpFcU,EACdC,EACAC,EACA7B,GAEA,IAAM8B,EAAOD,EAAb,EAKME,EAAgB/B,GADnBhH,KAAAA,IAAAA,GAA6BA,KAAAA,IAA9B,KAA2D8I,GAAI,EADjE,GAOA,OAFc9I,KAAAA,IAASgH,EAAThH,EAAd,GCRF,SAAgBgJ,EACdC,EACAC,GAEA,IAAMrC,EAAqBoC,EAA3B,MAAanC,EAAcmC,EAA3B,IAEA,SAF2BA,EAA3B,KAEkB,CAChB,IAAMjD,EAAQkD,EAAd,IACArC,GAAAA,EACAC,GAAAA,EAGF,MAAO,CACLD,MADK,EAELC,IAAAA,GCTJ,IAAMqC,EAAmC,CACvCtC,MADuC,EAEvCC,IAFuC,EAGvC5D,KAAM,I,ICmBKkG,EAAb,WAgBE,cACE/H,KAAA,GAAUa,EAAV,GACAb,KAAA,MAAaa,EAAb,MACAb,KAAA,WAAkBa,EAAlB,WACAb,KAAA,Kd7CF,Ec8CEA,KAAA,QAAegF,EAA8BhF,KAAD,MAAaA,KAAzD,YACAA,KAAA,cACAA,KAAA,WAEAA,KAAA,kBAAuBa,EAAAA,MAAvB,QJhDJ,SACE+F,EACAD,GAEA,IAEMqB,EAAa,aAFN9D,OAAAA,KAAb,GACmB+D,SAAnB,WAC4C,WAA5C,IACArB,EAAAA,MAAAA,WAAAA,EI2CEsB,CAAoBrH,EAAD,GAAab,KAAhCkI,SAEAlI,KAAA,eACEa,EAAAA,aAAuBL,EAAvBK,SACIb,KADJa,wBAEIb,KAHN,0BA7BJ,uCAmCEmI,SAAAA,GAKE,OAJAnI,KAAA,WAAkBA,KAAlB,SACAA,KAAA,QAAegF,EAA8BoD,EAAWpI,KAAxD,YACAA,KAAA,kBAAuBoI,EAAvB,QAEA,MAxCJ,sBA2CEC,SAAAA,EAAAA,GAEEjB,EAAAA,MAEApH,KAAA,KAAY,IAAIW,EAAK,CACnBiG,GAAI5G,KAAKR,MAAM8I,eAAiBtI,KADb,GAEnBqB,WAAYrB,KAAKR,MAFE,WAGnB+I,KAAAA,IAGF,ICjFF/I,EACAmH,EACA1B,ED+EQuD,GCjFRhJ,EDkFIQ,KADgE,MChFpE2G,EDkFI3G,KAFgE,QC/EpEiF,EDkFIjF,KAHF,aC5EAR,EAAAA,YACAA,EADAA,eAEAA,EAHF,sCASKmH,EAAF,YAAwB1B,IAAezE,EAAxC,YACGmG,EAAF,YAAwB1B,IAAezE,EAF1C,WD2EE,MACE,kBAAOR,KAAKR,MAAZ,aADF,kBAESQ,KAAKR,MAAZ,WAEAQ,KAAA,OAAc,IAAID,EAAO,CACvB0I,OAAQzI,KAAKR,MADU,YAEvBkJ,OAAQ1I,KAAKR,MAFU,YAGvBU,KAAMF,KAAKR,MAHY,UAIvBW,KAAMH,KAAKR,MAAMmJ,YAEnB,OAGF,GACE3I,KAAA,ODzFN,SACEY,EACA2H,EACA5B,EACAZ,EACAd,EACA2D,GAGA,IAAMvE,EAAgCsC,EAAAA,YAAtC,EACMrC,EAAgCqC,EAAAA,YAAtC,EAEA,EAGIgB,EAAqBtD,EAAYzD,EAHrC,OACSiI,EADT,QAEOC,EAFP,MAIA,EAGInB,EAAqBrD,EAAY1D,EAHrC,QACSmI,EADT,QAEOC,EAFP,MAMIN,EAAS9H,EAAAA,IAAW2H,EAAxB,OACIE,EAAS7H,EAAAA,KAAY2H,EAAzB,MACIpI,EAAOS,EAAX,OACIV,EAAOU,EAAX,MAEIqI,EAAJ,EACIC,EAAJ,EACIjE,IAAezE,EAAnB,WAME0I,EALAD,EAAmB3B,EAAmB,EAAD,EAGnCiB,EAAAA,OAAc3H,EAHhBqI,SAOF,IAAIE,EAAJ,EACIC,EAAJ,EA+BA,GA9BInE,IAAezE,EAAnB,aAME4I,EALAD,EAAmB7B,EAAmB,EAAD,EAGnCiB,EAAAA,MAAa3H,EAHfuI,QASEJ,EAAJ,IACEL,GAAkBK,EAAlBL,GAEEM,EAAJ,IACE7I,GAAc6I,EAAd7I,GAEE0I,EAAJ,IACEJ,GAAkBI,EAAlBJ,GAEEK,EAAJ,IACE5I,GAAc4I,EAAd5I,GAIFuI,GAAU1C,EAAV0C,EACAvI,GAAQ6F,EAAR7F,EACAwI,GAAU3C,EAAV2C,EACAvI,GAAQ4F,EAAR5F,EAGA,EAAmC,CACjC,IAAMkJ,EAAkBtD,EAAAA,EAAWnF,EAAXmF,IAAsBwC,EAA9C,OACMe,EAAmBvD,EAAAA,EAAWnF,EAAXmF,KAAuBwC,EAAhD,MACMgB,EACJxD,EAAAA,EAAWnF,EAAXmF,OAAyBwC,EAAAA,aAAoBA,EAD/C,OAEMiB,EACJzD,EAAAA,EAAWnF,EAAXmF,MAAwBwC,EAAAA,YAAmBA,EAD7C,OAGIc,GAAJ,IACEJ,EAAAA,EACAC,EAAAA,EACAR,EAAAA,EACAvI,EAAOoI,EAAAA,aAAoBA,EAA3BpI,QAEEmJ,GAAJ,IACEH,EAAAA,EACAC,EAAAA,EACAX,EAAAA,EACAvI,EAAOqI,EAAAA,YAAmBA,EAA1BrI,QAGGmJ,GAAL,IACEX,EAAS9H,EAAAA,IAAW2H,EAAX3H,OAAyBmF,EAAlC2C,EAGAO,EAAmB3B,EAAmB,EAAD,GAFrCnH,EAAOoI,EAAAA,aAAoBA,EAA3BpI,QACA,GAMA+I,EAAAA,EACIH,EAAJ,IACEL,GAAkBK,EAAlBL,KAGCY,GAAL,IACEb,EAAS7H,EAAAA,KAAY2H,EAAZ3H,MAAyBmF,EAAlC0C,EAGAU,EAAmB7B,EAAmB,EAAD,GAFrCpH,EAAOqI,EAAAA,YAAmBA,EAA1BrI,OACA,GAMAkJ,EAAAA,EACIP,EAAJ,IACEJ,GAAkBI,EAAlBJ,IAIAY,IAAJ,IACEX,EAAAA,EAGAO,EAAAA,EACAC,EAAiB5B,EAAmB,EAAD,GAHnCnH,EAAOS,EAAAA,OAAcmF,EAArB5F,GACA,GAOI6I,EAAJ,IACE7I,GAAc6I,EAAd7I,IAGAmJ,IAAJ,IACEb,EAAAA,EAGAU,EAAAA,EACAC,EAAiB9B,EAAmB,EAAD,GAHnCpH,EAAOU,EAAAA,MAAamF,EAApB7F,GACA,GAOI4I,EAAJ,IACE5I,GAAc4I,EAAd5I,IAgBN,OAXe,IAAIH,EAAO,CACxB0I,OADwB,EAExBC,OAFwB,EAGxBxI,KAHwB,EAIxBC,KAJwB,EAKxBgJ,iBALwB,EAMxBC,eANwB,EAOxBH,iBAPwB,EAQxBC,eAAAA,ICpEgBO,CACZzJ,KAD2D,OAG3DA,KAH2D,UAK3DA,KAL2D,WAM3DA,KAAKR,MANP,+BASAQ,KAAA,c,SE9GJ2G,EACA+C,GAEA,IAAMC,EAAc,EAAH,GAAjB,GAmBA,OAfIA,EAAJ,aACEA,EAAAA,WAAAA,EAAAA,GACKhD,EADLgD,WAAAA,CAEEnE,MAAOmE,EAAAA,WAAAA,MAA+BD,EAFxCC,iBAGElE,IAAKkE,EAAAA,WAAAA,IAA6BD,EAAON,kBAGzCO,EAAJ,aACEA,EAAAA,WAAAA,EAAAA,GACKhD,EADLgD,WAAAA,CAEEnE,MAAOmE,EAAAA,WAAAA,MAA+BD,EAFxCC,iBAGElE,IAAKkE,EAAAA,WAAAA,IAA6BD,EAAOR,kBAI7C,EFwFyBU,CACnB5J,KADuD,QAEvDA,KAFF,SAKAA,KAAA,O,SGnHJY,EACA2H,EACAxC,EACA6C,GAEA,IAAIF,EAAS9H,EAAAA,IAAW2H,EAAxB,OACIE,EAAS7H,EAAAA,KAAY2H,EAAzB,MACIpI,EAAOS,EAAX,OACIV,EAAOU,EAAX,MA8BA,OA3BA6H,GAAU1C,EAAV0C,EACAvI,GAAQ6F,EAAR7F,EACAwI,GAAU3C,EAAV2C,EACAvI,GAAQ4F,EAAR5F,EAEA,IACM4F,EAAAA,EAAWnF,EAAXmF,IAAsBwC,EAA1B,SACEG,EAAAA,GAEE3C,EAAAA,EAAWnF,EAAXmF,KAAuBwC,EAA3B,QACEE,EAAAA,GAEEtI,EAAOoI,EAAAA,aAAoBA,EAA/B,SACEpI,EAAOoI,EAAAA,aAAoBA,EAA3BpI,QAEED,EAAOqI,EAAAA,YAAmBA,EAA9B,QACErI,EAAOqI,EAAAA,YAAmBA,EAA1BrI,QAIW,IAAIH,EAAO,CACxB0I,OADwB,EAExBC,OAFwB,EAGxBxI,KAHwB,EAIxBC,KAAAA,IHgFgB0J,CACZ7J,KAD2C,SAI3CA,KAAKR,MAJP,+BAQFQ,KAAA,oBAEA,OAjGJ,yBAoGE8J,SAAAA,GAEE,IAAMC,EAAN,OAAsB/J,KAAKgK,SACvBC,IAAiBjK,KAArB,WACE,EACEA,KAAA,eAAsBA,KAAKR,MAA3B,UACK,IACLQ,KAAA,6BACAA,KAAA,cAAqBA,KAAKR,MAA1B,WAGJQ,KAAA,YA/GJ,6BAkHEkK,WACE,IAAMC,EAAgBxL,KAAAA,MAAWqB,KAAjC,UACAA,KAAA,2BApHJ,oBAuHEoK,WACMpK,KAAKR,MAAT,UAEAkH,EADgB1G,KAAKqK,eAAiBrK,KAAtC,QAC0BA,KAAV,SAAyBA,KAAzC0G,KA1HJ,yBA6HE4D,SAAAA,GACEtK,KAAA,WACAA,KAAA,wBAA+BA,KAAKR,MAAM+K,iBAAiBvK,KAA3D,UACAA,KAAA,gBAAuBA,KAAKR,MAAMgL,SAAlCxK,MACAA,KAAA,qBAjIJ,oBAoIEyK,SAAAA,GACEzK,KAAA,OAAc6D,EAAd,IArIJ,4BAwIE6G,SAAAA,GACE,IAAK1K,KAAL,OAAkB,OAAOA,KAEzB,IAAMiK,EAAenE,EACnB9F,KAAK0J,OAD6B,OAElC1J,KAAK0J,OAF6B,KAGlC3D,EAHF,GAOA,GAFA/F,KAAA,2BAEA,EAAmB,OAAOA,KAE1B,IAAM2K,EAAejF,EACnB1F,KAAK0J,OAD+B,OAEpC1J,KAAK0J,OAF+B,OAGpC3D,EAHoC,EAIpC/F,KAJF,QASA,OAFAA,KAAA,0BAEA,MA7JJ,0BAgKE4K,SAAAA,GACE,IAAK5K,KAAL,OAAkB,OAAOA,KAEzB,IAAMiK,EAAenE,EACnB9F,KAAK0J,OAD6B,OAElC1J,KAAK0J,OAF6B,KAGlC3D,EAHF,GAQA,GAFA/F,KAAA,2BAEKA,KAAL,SAAoB,OAAOA,KAE3B,IAAM2K,EAAejF,EACnB1F,KAAK0J,OAD+B,OAEpC1J,KAAK0J,OAF+B,OAGpC3D,EAHoC,EAIpC/F,KAJF,QASA,OAFAA,KAAA,0BAEA,MAtLJ,KI1Ba6K,EAAb,WAOE,cAOE7K,KAAA,gBAAuB8K,EAAvB,gBACA9K,KAAA,MAAa8K,EAAb,MACA9K,KAAA,OAAc8K,EAAd,OACA9K,KAAA,aAAoB8K,EAApB,aACA9K,KAAA,YAAmB8K,EAAnB,YAlBJ,sCAqBEC,SAAAA,GACE,OACE/G,EAAAA,QAAiBhE,KAAjBgE,OACAA,EAAAA,SAAkBhE,KADlBgE,QAEAA,EAAAA,cAAuBhE,KAFvBgE,aAGAA,EAAAA,eAAwBhE,KAJ1B,cAtBJ,UAiCEgL,SAAAA,GAKE,OAJAhL,KAAA,MAAagE,EAAb,MACAhE,KAAA,OAAcgE,EAAd,OACAhE,KAAA,aAAoBgE,EAApB,aACAhE,KAAA,YAAmBgE,EAAnB,YACA,MAtCJ,KCNaiH,EAAb,WAME,gBACEjL,KAAA,IACAA,KAAA,IACAA,KAAA,KACAA,KAAA,KAVJ,6BAaEkL,SAAAA,EAAAA,GAKE,OAJAlL,KAAA,GAAU9C,EAAI8C,KAAd,EACAA,KAAA,GAAUmL,EAAInL,KAAd,EACAA,KAAA,IACAA,KAAA,IACA,MAlBJ,KCuBA,IAAaoL,EAAb,WA2BE,c,QACEnG,WAAAA,OAAAA,IAAAA,EAAazE,EAAW6K,SAAAA,EACxBC,EAAAA,EAAAA,gBAEAtL,KAAA,aAEAA,KAAA,YAEAA,KAAA,wBACAA,KAAA,aAAcsL,EAAd,SAGA,MAAetL,KAAf,qBAAO9C,EAAP,KAAUiO,EAAV,KACAnL,KAAA,OAAc,IAAIiL,EAAO/N,EAAzB,GAEA8C,KAAA,KAAY,IAAI6K,EAAK,CACnBU,MADmB,EAEnBC,OAFmB,EAGnBC,YAHmB,EAInBC,aAJmB,EAKnBJ,gBAAiBtL,KAAK2L,oBAAsBL,OAAkBM,IAIhE5L,KAAA,YAGAA,KAAA,iB,WC5EF,IAAI6L,GAAJ,EACA,IACE,IAAMC,EAAO5H,OAAA,4BAAqC,CAChD6H,IADgD,WAG9C,OADAF,GAAAA,GACA,KAIJG,OAAAA,iBAAAA,OAAAA,KARE,GAUFA,OAAAA,oBAAAA,OAAAA,KAAAA,GACA,MAAOC,IACT,SD+D0BC,GAGxBlM,KAAA,kBACAA,KAAA,cAAmBA,KAAnB,QACAA,KAAA,qBACAA,KAAA,eA5DJ,OAeE,YAGE,KAFA,qBAAyBgM,QAGvB,MAAM,IAAIvO,MAAV,4GAKF,OAAO,IAAI2N,EAAX,IAxBJ,2CA+DEe,W,WACE,+WAoBU,YAER,KAAe,UAAf,OAtFN,gBA0FEC,SAAAA,GACExF,EAAAA,iBAAAA,SAEE5G,KAFF4G,gBAGE5G,KAAKqM,kBAAmB,CAAEC,SAAS,IAErCN,OAAAA,iBAAAA,SAAkChM,KAAlCgM,oBAAAA,GACAA,OAAAA,iBAAAA,OAAgChM,KAAhCgM,oBAAAA,GACAA,OAAAA,iBAAAA,QAAiChM,KAAjCgM,oBAAAA,GACAA,OAAAA,iBAAAA,OAAgChM,KAAhCgM,oBAAAA,IAnGJ,mBAsGEO,SAAAA,G,MACE3F,EAAAA,oBAAAA,SAAiC5G,KAAjC4G,eAAAA,GACAoF,OAAAA,oBAAAA,SAAqChM,KAArCgM,oBAAAA,GACAA,OAAAA,oBAAAA,OAAmChM,KAAnCgM,oBAAAA,GACAA,OAAAA,oBAAAA,QAAoChM,KAApCgM,oBAAAA,GACAA,OAAAA,oBAAAA,OAAmChM,KAAnCgM,oBAAAA,GACA,SAAAhM,KAAA,kCA5GJ,qBA+GEwM,W,WACE,IACE,IAAMC,EAA0BzM,KAAK2L,oBAChC3L,KAD2B,OAE5B0M,SAFJ,gBAGA1M,KAAA,gBAAuB,IAAI2M,gBAAe,kBAAM,EAAN,YAC1C3M,KAAA,2BACA,MAAOiM,GACPW,QAAAA,KAAAA,mEAvHN,qBA6HEC,WAYE,MAAO,CATI7M,KAAK2L,oBAEZ3L,KAAA,OAFO,WAGPgM,OAHJ,YAIWhM,KAAK2L,oBAEZ3L,KAAA,OAFO,UAGPgM,OAHJ,cApIJ,gBAgJEc,WACE,MAAiB9M,KAAjB,qBAAO+M,EAAP,KAAWC,EAAX,KACAhN,KAAA,uBAIKA,KAAD,UAAkBA,KAAKiN,SAASC,OAApC,IACElN,KAAA,UAD8C,EAG9CgM,OAAAA,sBAA6BhM,KAA7BgM,sBAzJN,qBAiKEmB,WACEnN,KAAA,eACAA,KAAA,mBAAwB,CAAEoN,aAAa,KAnK3C,qBA2KEC,SAAAA,G,WAAqBD,Q,MAA2C,MAA3CA,YACfpN,KAAJ,UACEA,KAAA,kBAAsB,SAAAqH,GACpB,GACEA,EAAAA,oBAA4B,EAA5BA,KAAuC,EAAvCA,QAEF,+BAIJrH,KAAA,aArLJ,yBA6LEsN,SAAAA,GACMjG,EAAAA,MAAJ,UACAA,EAAAA,eAAuBrH,KAAvBqH,SA/LJ,iBAqMEkG,WAME,GAAIvN,KAAJ,oBAA8B,CAE5B,IAAMuL,EAAQvL,KAAKwN,OAFS,YAItBhC,EAASxL,KAAKwN,OAJQ,aAMtB9B,EAAe1L,KAAKwN,OANE,aAQtB/B,EAAczL,KAAKwN,OAAzB,YACA,OAAOxN,KAAKuI,KAAKyC,QAAQ,CAAEO,MAAF,EAASC,OAAT,EAAiBE,aAAjB,EAA+BD,YAAAA,IAG1D,IAAMgC,EAAOf,SAAb,gBAMA,MAAO,CAAEnB,MALKS,OAAAA,YAAqByB,EAAnC,YAKgBjC,OAJDQ,OAAAA,aAAsByB,EAArC,aAIwB/B,aAHH+B,EAArB,aAGsChC,YAFlBgC,EAApB,cA3NJ,eAmOEC,WACE,OAAO1N,KAAKuI,KAAKyC,QAAQhL,KAAzB,mBApOJ,yBA2OE2N,WACE,OAAO3N,KAAKuI,KAAKwC,WAAW/K,KAA5B,mBA5OJ,cAwPE4N,WACE,OAAO5N,KAAP,UAzPJ,gBA+PE6N,SAAAA,GACE,IAAMC,EAAa,IAAI/F,EAAQ,EAAZ,MAA0B9C,WAAYjF,KAAKiF,cAa9D,OAZA6I,EAAAA,oBAA+B9N,KAA/B8N,KAA0C9N,KAA1C8N,QACA9N,KAAA,SAAgBA,KAAKiN,SAAL,UACRjN,KADQ,cAEZ,CAFJ,GAGAA,KAAA,0BAKIA,KAAJ,0BACEA,KAAA,SAEF,GA7QJ,oBAmRE+N,SAAAA,GACO/N,KAAL,WACAA,KAAA,SAAgBA,KAAKiN,SAASe,QAAO,SAAApH,GAAE,OAAIA,EAAAA,KAAJ,OArR3C,yBA2REqH,SAAAA,EAAAA,GACMjO,KAAJ,WACEA,KAAA,SAAgBA,KAAKiN,SAASiB,KAAI,SAAAtH,GAChC,OAAIA,EAAAA,KAAJ,EACSA,EAAAA,YAAP,GAEF,MAIJ5G,KAAA,UArSJ,qBA2SEmO,SAAAA,GACE/G,EAAAA,IA5SJ,SAkTEgH,WAGE,MAAiBpO,KAAjB,qBAAO+M,EAAP,KAAWC,EAAX,KACAhN,KAAA,sBAEAA,KAAA,eACAA,KAAA,mBAAwB,CAAEoN,aAAa,KAzT3C,wBA8TEiB,SAAAA,GAEErO,KAAA,iBAAsBA,KAAtB,QAEAA,KAAA,SACAA,KAAA,wBACAA,KAAA,KAAY,IAAI6K,EAAK,CACnBU,MADmB,EAEnBC,OAFmB,EAGnBC,YAHmB,EAInBC,aAJmB,EAKnBJ,gBAAiB1E,IAEnB5G,KAAA,eACAA,KAAA,cAAmBA,KAAnB,QACAA,KAAA,mBAAwB,CAAEoN,aAAa,KA7U3C,UAmVEkB,WACEtO,KAAA,iBAAsBA,KAAtB,QACIA,KAAJ,UACEA,KAAA,kBAAsB,SAAAqH,GAAO,OAAID,EAAJ,MAG/BpH,KAAA,iBAzVJ,K,0vBEtBA,SAEgBuO,EAAyB/O,GAIvC,ICPwCgP,EDQtCC,EAyBEjP,EA1BJ,SAEEsE,EAwBEtE,EA1BJ,OAGEmJ,EAuBEnJ,EA1BJ,UAIEgL,EAsBEhL,EA1BJ,SAKEkP,EAqBElP,EA1BJ,QAMEmP,EAoBEnP,EA1BJ,OAOE+K,EAmBE/K,EA1BJ,iBAQEuF,EAkBEvF,EA1BJ,QASE6B,EAiBE7B,EA1BJ,WAUE+E,EAgBE/E,EA1BJ,OAWEgF,EAeEhF,EA1BJ,QAYEiF,EAcEjF,EA1BJ,QAaEkF,EAaElF,EA1BJ,QAcEmF,EAYEnF,EA1BJ,MAeEoF,EAWEpF,EA1BJ,OAgBEqF,EAUErF,EA1BJ,OAiBEsF,EASEtF,EA1BJ,OAkBEoJ,EAQEpJ,EA1BJ,8BAmBEoP,EAOEpP,EA1BJ,iCAoBE4E,EAME5E,EA1BJ,MAqBEqP,EAKErP,EA1BJ,YAsBE8I,EAIE9I,EA1BJ,cAuBE6E,EAGE7E,EA1BJ,WAwBE8E,EAEE9E,EA1BJ,WAyBKsP,EAzBL,OAuDA,MAAO,CACLC,eC/DsCP,EDmCQ,CAC9CC,SAD8C,EAE9C3K,OAF8C,EAG9C6E,UAH8C,EAI9C6B,SAJ8C,EAK9CkE,QAL8C,EAM9CC,OAN8C,EAO9CpE,iBAP8C,EAQ9CxF,QAR8C,EAS9C1D,WAT8C,EAU9CkD,OAV8C,EAW9CC,QAX8C,EAY9CC,QAZ8C,EAa9CC,QAb8C,EAc9CC,MAd8C,EAe9CC,OAf8C,EAgB9CC,OAhB8C,EAiB9CC,OAjB8C,EAkB9C8D,8BAlB8C,EAmB9CgG,iCAnB8C,EAoB9CxK,MApB8C,EAqB9CyK,YArB8C,EAsB9CvG,cAtB8C,EAuB9CjE,WAvB8C,EAwB9CC,WAAAA,GC1DFJ,OAAAA,KAAAA,GAAAA,SAAyB,wBACvBsK,IAAAA,EAAAA,UAAgCA,EAAhCA,GADuB,MAGzB,GD4DEM,KAAAA,G,IE7DSE,EAAkBjQ,EAAAA,cAAxB,M,SCISkQ,EAAmCzP,GACjD,IAAM0P,E,WCHN,IAAMC,GAAqBC,EAAAA,EAAAA,YAA3B,GAEA,GADA,qBAAwBpD,OAEtB,YAGF,MACE,MAAM,IAAIvO,MAAV,wHAKF,SDTmB4R,GACbrQ,GAAMsQ,EAAAA,EAAAA,QAAZ,MACQP,EAAkBR,EAA1B,kB,SEPkCW,IAClCK,EAAAA,EAAAA,YAAU,WAKR,GAJA,qBAAwBvD,SAIpB,KAFekD,aAAnB,GAGE,MAAM,IAAIzR,MAAV,qFAID,CAVH8R,IFQAC,CAAAA,GAEA,OAA8BC,EAAAA,EAAAA,YAAvBpI,EAAP,KAAgBqI,EAAhB,KA6DA,OA1DAH,EAAAA,EAAAA,YAAU,WACR,MACA,KAAIvQ,EAAAA,mBAAJ,aAQE,MAAM,IAAIvB,MAAV,kFAPA,IAAMoD,EAAgC,CACpC+F,GAAI5H,EADgC,QAEpCQ,MAAOuP,GAUX,OAREjB,EAAU,MAAGoB,OAAH,EAAGA,EAAAA,cAAbpB,GACA4B,EAAAA,GAOK,WACL,IACER,MAAAA,GAAAA,EAAAA,kBAA8BpB,EAA9BoB,QAjBNK,KAuBAA,EAAAA,EAAAA,YAAU,WACR,IACM/P,EAAJ,SACE0P,MAAAA,GAAAA,EAAAA,mBAAAA,GAEAA,MAAAA,GAAAA,EAAAA,uBAAmC7H,EAAnC6H,GAAAA,MAGH,CACD1P,EADC,SAEDA,EAFC,OAGDA,EAHC,UAIDA,EAJC,SAKDA,EALC,QAMDA,EANC,OAODA,EAPC,iBAQDA,EARC,QASDA,EATC,WAUDA,EAVC,OAWDA,EAXC,QAYDA,EAZC,QAaDA,EAbC,QAcDA,EAdC,MAeDA,EAfC,OAgBDA,EAhBC,OAiBDA,EAjBC,OAkBDA,EAlBC,8BAmBDA,EAnBC,iCAoBDA,EApBC,MAqBDA,EArBC,YAsBDA,EAtBC,cAuBDA,EAvBC,WAwBDA,EAhCF+P,aAmCO,CAAEvQ,IAAF,EAAOkQ,WAAP,EAAmB7H,QAAAA,GGxE5B,IAAMsI,EAAgB,CACpBnE,OAAQ,G,kECGJoE,EAA+B,CACnCC,SADmC,WAEnC9O,IAFmC,EAGnCG,KAHmC,EAInCF,MAJmC,EAKnCC,OAAQ,GAGG6O,EAAsB,SAAC,GAGlC,IChB4BC,EDgB5B,EAAgCxB,EAAhC,GAAQQ,EAAR,gBAAuBD,EAAvB,OAIEkB,EAKElB,EARJ,QAQIA,EARJ,SAIEmB,OAJF,SAMEC,EAEEpB,EARJ,OAOKqB,EAPL,OAUMC,GC3BsBL,ED2B5B,GC1BO,MACH,CACEM,gBAAiB,OAAON,EAAT,MADjB,IAEEO,mBAFF,SAGEC,eAAgB,SAJtB,GD2BMC,EAAgBP,EDvBxB,SAAiCF,GAC/B,GAAIpS,MAAAA,QAAcoS,EAAlB,YAAqC,CACnC,IAAMU,EAAkBjP,EAAkBuO,EAAAA,WAA1C,IACMW,EAAgBlP,EAAkBuO,EAAAA,WAAxC,IAEA,GAAIU,OAAAA,EAAAA,MAAJ,OAAqCC,EAAAA,KACnC,MAAO,CACL3P,KAAG,EAAKpC,KAAAA,IAAS+R,EAAT/R,OADH,KAELsC,QAAM,EAAKtC,KAAAA,IAAS8R,EAAT9R,OAAL,MAIV,GAAI8R,MAAAA,EAAAA,MAAJ,MAAoCC,EAAAA,KAA4B,OACxDC,GACJ,SAAAZ,EAAA,kDADF,EAKA,MAAO,CACLhP,KAJF,EAAYpC,KAAAA,IAASgS,IAAAA,EAAAA,OAA2BD,EAApC/R,OAGL,KAELsC,QAJF,EACEtC,KAAAA,IAASgS,IAAAA,EAAAA,OAA2BF,EAApC9R,OAGM,OAIZ,GAAIoR,EAAJ,MAAiB,CACf,IAAM3L,EAAQ2L,EAAAA,OAAd,EAEA,MAAO,CACLhP,IAAKpC,GAAAA,KAAAA,IAAAA,IAAAA,EADA,KAELsC,OAAQtC,GAAAA,KAAAA,IAAAA,IAAAA,EAA4B,MAGxC,SCTiCiS,CAAH,GAA9B,GACMC,EAAW5B,EAAW,GAC1B3G,cAAe9I,EADW,cAE1BoP,kCAAkC,GAFpC,IAMA,OACE7P,EAAAA,cAAAA,MAAAA,OAAAA,OAAAA,C,cACemR,EACblR,IAAK6R,EAAS7R,IACdgR,MAAK,eAHPjR,GAWG+P,EAZL,W,gCE3BIgC,EAAgC,CACpCjB,SADoC,WAEpCkB,SAFoC,SAGpCxF,MAAO,QAGIyF,EAAiB,SAAC,GAG7B,OAA0CvB,EAAAA,EAAAA,UAA1C,MAAOnH,EAAP,KAAsB2I,EAAtB,KAGMC,GAAe5B,EAAAA,EAAAA,QAArB,OACAC,EAAAA,EAAAA,YAAU,WACR0B,EAAiBC,EAAjBD,WADF1B,IAGA,IAES4B,EAGL3R,EALJ,QAKIA,EALJ,OAGE4R,OAHF,WAIKC,EAJL,OAMA,OACE,qCACErS,IAAKkS,EACLlB,MAAK,WAFP,GAKGoB,EAAA,KACC,qBACE9I,GACE,mCACMyH,EAAAA,CACJzH,cAAeA,EACftB,IAAG,SAAWpJ,EACdsS,OAAM,SAAWtS,QAIxB4B,EAjBL,WCzBW8R,EAAb,Y,QAOE,c,MCT+BzQ,E,ODU7B,wBACA,YCX6BA,EDWM,CACjCoE,WAAYzF,EADqB,WAEjC8L,gBAAiB9L,EAAM8L,iBCX3B,qBAAwBU,OAMxB,KAFSZ,EAAmBmG,KAA1B,I,IDJJ,G,EAAA,G,sEAAA,8CAeEC,SAAAA,GACMC,EAAAA,kBAA8BzR,KAAKR,MAAvC,iBAEEQ,KAAA,iCAAsCA,KAAKR,MAA3C,kBAlBN,uBAsBEkS,WAEE1R,KAAA,WAAkBA,KAAKkP,WAAvB,WAxBJ,SA2BEyC,WACE,IAAQC,EAAa5R,KAArB,eACA,OAEEjB,EAAAA,cAACiQ,EAADjQ,SAAAA,CAA0B6C,MAAO5B,KAAKkP,YAAtCnQ,IA/BN,gBACSuS,EAAAA,aAAe,CACpBrM,WAAYzE,EAAW6K","sources":["../node_modules/bezier-easing/src/index.js","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/parallax-controller/src/types.ts","../node_modules/parallax-controller/src/classes/Limits.ts","../node_modules/parallax-controller/src/utils/createId.ts","../node_modules/parallax-controller/src/classes/Rect.ts","../node_modules/parallax-controller/src/utils/parseValueAndUnit.ts","../node_modules/parallax-controller/src/constants.ts","../node_modules/parallax-controller/src/helpers/createEasingFunction.ts","../node_modules/parallax-controller/src/helpers/parseElementTransitionEffects.ts","../node_modules/parallax-controller/src/helpers/getProgressAmount.ts","../node_modules/parallax-controller/src/helpers/isElementInView.ts","../node_modules/parallax-controller/src/helpers/scaleEffectByProgress.ts","../node_modules/parallax-controller/src/utils/scaleBetween.ts","../node_modules/parallax-controller/src/helpers/elementStyles.ts","../node_modules/parallax-controller/src/helpers/getTranslateScalar.ts","../node_modules/parallax-controller/src/helpers/getStartEndValueInPx.ts","../node_modules/parallax-controller/src/helpers/createLimitsWithTranslationsForRelativeElements.ts","../node_modules/parallax-controller/src/classes/Element.ts","../node_modules/parallax-controller/src/helpers/getShouldScaleTranslateEffects.ts","../node_modules/parallax-controller/src/helpers/scaleTranslateEffectsForSlowerScroll.ts","../node_modules/parallax-controller/src/helpers/createLimitsForRelativeElements.ts","../node_modules/parallax-controller/src/classes/View.ts","../node_modules/parallax-controller/src/classes/Scroll.ts","../node_modules/parallax-controller/src/classes/ParallaxController.ts","../node_modules/parallax-controller/src/utils/testForPassiveScroll.ts","../node_modules/react-scroll-parallax/src/helpers/getIsolatedParallaxProps.ts","../node_modules/react-scroll-parallax/src/utils/removeUndefinedObjectKeys.ts","../node_modules/react-scroll-parallax/src/context/ParallaxContext.ts","../node_modules/react-scroll-parallax/src/hooks/useParallax.ts","../node_modules/react-scroll-parallax/src/hooks/useParallaxController.ts","../node_modules/react-scroll-parallax/src/components/Parallax/hooks.ts","../node_modules/react-scroll-parallax/src/components/ParallaxBanner/helpers/getExpandedStyle.ts","../node_modules/react-scroll-parallax/src/components/ParallaxBanner/components/ParallaxBannerLayer.tsx","../node_modules/react-scroll-parallax/src/components/ParallaxBanner/helpers/getImageStyle.ts","../node_modules/react-scroll-parallax/src/components/ParallaxBanner/index.tsx","../node_modules/react-scroll-parallax/src/components/ParallaxProvider/index.tsx","../node_modules/react-scroll-parallax/src/components/ParallaxProvider/helpers.ts"],"sourcesContent":["/**\n * https://github.com/gre/bezier-easing\n * BezierEasing - use bezier curve for transition easing function\n * by Gaëtan Renaudeau 2014 - 2015 – MIT License\n */\n\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\nvar NEWTON_ITERATIONS = 4;\nvar NEWTON_MIN_SLOPE = 0.001;\nvar SUBDIVISION_PRECISION = 0.0000001;\nvar SUBDIVISION_MAX_ITERATIONS = 10;\n\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\nvar float32ArraySupported = typeof Float32Array === 'function';\n\nfunction A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\nfunction B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\nfunction C (aA1)      { return 3.0 * aA1; }\n\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nfunction calcBezier (aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT; }\n\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\nfunction getSlope (aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1); }\n\nfunction binarySubdivide (aX, aA, aB, mX1, mX2) {\n  var currentX, currentT, i = 0;\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n  return currentT;\n}\n\nfunction newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\n for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n   var currentSlope = getSlope(aGuessT, mX1, mX2);\n   if (currentSlope === 0.0) {\n     return aGuessT;\n   }\n   var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n   aGuessT -= currentX / currentSlope;\n }\n return aGuessT;\n}\n\nfunction LinearEasing (x) {\n  return x;\n}\n\nmodule.exports = function bezier (mX1, mY1, mX2, mY2) {\n  if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {\n    throw new Error('bezier x values must be in [0, 1] range');\n  }\n\n  if (mX1 === mY1 && mX2 === mY2) {\n    return LinearEasing;\n  }\n\n  // Precompute samples table\n  var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n  for (var i = 0; i < kSplineTableSize; ++i) {\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n  }\n\n  function getTForX (aX) {\n    var intervalStart = 0.0;\n    var currentSample = 1;\n    var lastSample = kSplineTableSize - 1;\n\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n      intervalStart += kSampleStepSize;\n    }\n    --currentSample;\n\n    // Interpolate to provide an initial guess for t\n    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    var guessForT = intervalStart + dist * kSampleStepSize;\n\n    var initialSlope = getSlope(guessForT, mX1, mX2);\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n    }\n  }\n\n  return function BezierEasing (x) {\n    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n    if (x === 0) {\n      return 0;\n    }\n    if (x === 1) {\n      return 1;\n    }\n    return calcBezier(getTForX(x), mY1, mY2);\n  };\n};\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import { EasingFunction } from 'bezier-easing';\nimport { Element } from './classes/Element';\n\nexport type ParallaxStartEndEffects = {\n  translateX?: ParsedValueEffect;\n  translateY?: ParsedValueEffect;\n  rotate?: ParsedValueEffect;\n  rotateX?: ParsedValueEffect;\n  rotateY?: ParsedValueEffect;\n  rotateZ?: ParsedValueEffect;\n  scale?: ParsedValueEffect;\n  scaleX?: ParsedValueEffect;\n  scaleY?: ParsedValueEffect;\n  scaleZ?: ParsedValueEffect;\n  opacity?: ParsedValueEffect;\n};\n\nexport enum ValidCSSEffects {\n  'speed' = 'speed',\n  'translateX' = 'translateX',\n  'translateY' = 'translateY',\n  'rotate' = 'rotate',\n  'rotateX' = 'rotateX',\n  'rotateY' = 'rotateY',\n  'rotateZ' = 'rotateZ',\n  'scale' = 'scale',\n  'scaleX' = 'scaleX',\n  'scaleY' = 'scaleY',\n  'scaleZ' = 'scaleZ',\n  'opacity' = 'opacity',\n}\n\nexport enum Units {\n  'px' = 'px',\n  '%' = '%',\n}\nexport type ValidUnits = keyof typeof Units;\n\nexport enum RotationUnits {\n  'deg' = 'deg',\n  'turn' = 'turn',\n  'rad' = 'rad',\n}\n\nexport enum ScaleUnits {\n  '' = '',\n}\n\nexport type ValidScaleUnits = keyof typeof ScaleUnits;\n\nexport type ValidRotationUnits = keyof typeof RotationUnits;\n\nexport type AllValidUnits = ValidUnits | ValidRotationUnits | ValidScaleUnits;\n\nexport enum ScrollAxis {\n  'vertical' = 'vertical',\n  'horizontal' = 'horizontal',\n}\n\nexport type ValidScrollAxis = keyof typeof ScrollAxis;\n\nexport type ParsedValueShape = {\n  value: number;\n  unit: AllValidUnits;\n};\n\nexport type ParsedValueEffect = {\n  start: number;\n  end: number;\n  unit: AllValidUnits;\n  easing?: EasingFunction;\n};\n\nexport type ViewElement = HTMLElement | Window;\nexport type ParallaxControllerOptions = {\n  scrollAxis?: ValidScrollAxis;\n  scrollContainer?: HTMLElement;\n};\n\nexport type EffectNumber = [number, number, EasingParam?];\nexport type EffectString = [string, string, EasingParam?];\nexport type EasingParam = ValidEasingPresets | EasingParams;\nexport type CSSEffect = EffectNumber | EffectString;\nexport type ScaleOpacityEffect = EffectNumber;\n\nexport type ParallaxElementConfig = {\n  speed?: number;\n  disabled?: boolean;\n  translateX?: CSSEffect;\n  translateY?: CSSEffect;\n  rotate?: CSSEffect;\n  rotateX?: CSSEffect;\n  rotateY?: CSSEffect;\n  rotateZ?: CSSEffect;\n  scale?: ScaleOpacityEffect;\n  scaleX?: ScaleOpacityEffect;\n  scaleY?: ScaleOpacityEffect;\n  scaleZ?: ScaleOpacityEffect;\n  opacity?: ScaleOpacityEffect;\n  easing?: EasingParams | ValidEasingPresets;\n  rootMargin?: RootMarginShape;\n  /* Always start and end animations at the given effect values - if the element is positioned inside the view when scroll is at zero or ends in view at final scroll position, the initial and final positions are used to determine progress instead of the scroll view size */\n  shouldAlwaysCompleteAnimation?: boolean;\n  /* Disable scaling translations - translate effects that cause the element to appear in the view longer must be scaled up so that animation doesn't end early */\n  shouldDisableScalingTranslations?: boolean;\n\n  startScroll?: number;\n  endScroll?: number;\n  targetElement?: HTMLElement;\n\n  onEnter?: () => any;\n  onExit?: () => any;\n  onChange?: (element: Element) => any;\n  onProgressChange?: (progress: number) => any;\n};\n\nexport type CreateElementOptions = {\n  el: HTMLElement;\n  props: ParallaxElementConfig;\n};\n\nexport type EasingParams = [number, number, number, number];\n\nexport enum EasingPreset {\n  ease = 'ease',\n  easeIn = 'easeIn',\n  easeOut = 'easeOut',\n  easeInOut = 'easeInOut',\n  easeInQuad = 'easeInQuad',\n  easeInCubic = 'easeInCubic',\n  easeInQuart = 'easeInQuart',\n  easeInQuint = 'easeInQuint',\n  easeInSine = 'easeInSine',\n  easeInExpo = 'easeInExpo',\n  easeInCirc = 'easeInCirc',\n  easeOutQuad = 'easeOutQuad',\n  easeOutCubic = 'easeOutCubic',\n  easeOutQuart = 'easeOutQuart',\n  easeOutQuint = 'easeOutQuint',\n  easeOutSine = 'easeOutSine',\n  easeOutExpo = 'easeOutExpo',\n  easeOutCirc = 'easeOutCirc',\n  easeInOutQuad = 'easeInOutQuad',\n  easeInOutCubic = 'easeInOutCubic',\n  easeInOutQuart = 'easeInOutQuart',\n  easeInOutQuint = 'easeInOutQuint',\n  easeInOutSine = 'easeInOutSine',\n  easeInOutExpo = 'easeInOutExpo',\n  easeInOutCirc = 'easeInOutCirc',\n  easeInBack = 'easeInBack',\n  easeOutBack = 'easeOutBack',\n  easeInOutBack = 'easeInOutBack',\n}\n\nexport type ValidEasingPresets = keyof typeof EasingPreset;\n\nexport type RootMarginShape = {\n  top: number;\n  bottom: number;\n  left: number;\n  right: number;\n};\n","export type LimitOptions = {\n  startX: number;\n  startY: number;\n  endX: number;\n  endY: number;\n  startMultiplierX?: number;\n  endMultiplierX?: number;\n  startMultiplierY?: number;\n  endMultiplierY?: number;\n};\n\nexport class Limits {\n  startX: number;\n  startY: number;\n  endX: number;\n  endY: number;\n  totalX: number;\n  totalY: number;\n  startMultiplierX: number;\n  endMultiplierX: number;\n  startMultiplierY: number;\n  endMultiplierY: number;\n\n  constructor(properties: LimitOptions) {\n    this.startX = properties.startX;\n    this.startY = properties.startY;\n    this.endX = properties.endX;\n    this.endY = properties.endY;\n    // Used to calculate the progress of the element\n    this.totalX = this.endX - this.startX;\n    this.totalY = this.endY - this.startY;\n\n    // Used to scale translate effects\n    this.startMultiplierX = properties.startMultiplierX || 1;\n    this.endMultiplierX = properties.endMultiplierX || 1;\n    this.startMultiplierY = properties.startMultiplierY || 1;\n    this.endMultiplierY = properties.endMultiplierY || 1;\n  }\n}\n","/**\n * Creates a unique id to distinguish parallax elements.\n */\n\nlet id = 0;\n\nexport function createId(): number {\n  ++id;\n  return id;\n}\n","import { View } from './View';\nimport { RootMarginShape } from '../types';\n\nexport class Rect {\n  height: number;\n  width: number;\n  left: number;\n  right: number;\n  top: number;\n  bottom: number;\n\n  constructor(options: {\n    el: HTMLElement;\n    view: View;\n    rootMargin?: RootMarginShape;\n  }) {\n    let rect = options.el.getBoundingClientRect();\n\n    // rect is based on viewport -- must adjust for relative scroll container\n    if (options.view.scrollContainer) {\n      const scrollRect = options.view.scrollContainer.getBoundingClientRect();\n      rect = {\n        ...rect,\n        top: rect.top - scrollRect.top,\n        right: rect.right - scrollRect.left,\n        bottom: rect.bottom - scrollRect.top,\n        left: rect.left - scrollRect.left,\n      };\n    }\n    this.height = options.el.offsetHeight;\n    this.width = options.el.offsetWidth;\n    this.left = rect.left;\n    this.right = rect.right;\n    this.top = rect.top;\n    this.bottom = rect.bottom;\n\n    if (options.rootMargin) {\n      this._setRectWithRootMargin(options.rootMargin);\n    }\n  }\n\n  /**\n   * Apply root margin to all properties\n   */\n  _setRectWithRootMargin(rootMargin: RootMarginShape) {\n    let totalRootY = rootMargin.top + rootMargin.bottom;\n    let totalRootX = rootMargin.left + rootMargin.right;\n    this.top -= rootMargin.top;\n    this.right += rootMargin.right;\n    this.bottom += rootMargin.bottom;\n    this.left -= rootMargin.left;\n    this.height += totalRootY;\n    this.width += totalRootX;\n  }\n}\n","import {\n  ScaleUnits,\n  ParsedValueShape,\n  RotationUnits,\n  Units,\n  AllValidUnits,\n} from '../types';\n\nexport const VALID_UNITS = [\n  ScaleUnits[''],\n  Units.px,\n  Units['%'],\n  RotationUnits.deg,\n  RotationUnits.turn,\n  RotationUnits.rad,\n];\n\n/**\n * Determines the unit of a string and parses the value\n */\n\nexport function parseValueAndUnit(\n  str?: string | number,\n  defaultUnit: AllValidUnits = Units['%']\n): ParsedValueShape {\n  let out: ParsedValueShape = { value: 0, unit: defaultUnit };\n\n  if (typeof str === 'undefined') return out;\n\n  const isValid = typeof str === 'number' || typeof str === 'string';\n\n  if (!isValid) {\n    throw new Error(\n      'Invalid value provided. Must provide a value as a string or number'\n    );\n  }\n\n  str = String(str);\n  out.value = parseFloat(str);\n\n  // @ts-ignore\n  out.unit = str.match(/[\\d.\\-+]*\\s*(.*)/)[1] || defaultUnit;\n\n  // @ts-expect-error\n  const isValidUnit: boolean = VALID_UNITS.includes(out.unit);\n\n  if (!isValidUnit) {\n    throw new Error('Invalid unit provided.');\n  }\n\n  return out;\n}\n","import { ValidEasingPresets } from './types';\n\nexport type EasingPreset = { [key in ValidEasingPresets]: number[] };\n\nexport const easingPresets: EasingPreset = {\n  ease: [0.25, 0.1, 0.25, 1.0],\n  easeIn: [0.42, 0.0, 1.0, 1.0],\n  easeOut: [0.0, 0.0, 0.58, 1.0],\n  easeInOut: [0.42, 0.0, 0.58, 1.0],\n  /* Ease IN curves */\n  easeInQuad: [0.55, 0.085, 0.68, 0.53],\n  easeInCubic: [0.55, 0.055, 0.675, 0.19],\n  easeInQuart: [0.895, 0.03, 0.685, 0.22],\n  easeInQuint: [0.755, 0.05, 0.855, 0.06],\n  easeInSine: [0.47, 0.0, 0.745, 0.715],\n  easeInExpo: [0.95, 0.05, 0.795, 0.035],\n  easeInCirc: [0.6, 0.04, 0.98, 0.335],\n  /* Ease Out Curves */\n  easeOutQuad: [0.25, 0.46, 0.45, 0.94],\n  easeOutCubic: [0.215, 0.61, 0.355, 1.0],\n  easeOutQuart: [0.165, 0.84, 0.44, 1.0],\n  easeOutQuint: [0.23, 1.0, 0.32, 1.0],\n  easeOutSine: [0.39, 0.575, 0.565, 1.0],\n  easeOutExpo: [0.19, 1.0, 0.22, 1.0],\n  easeOutCirc: [0.075, 0.82, 0.165, 1.0],\n  /* Ease IN Out Curves */\n  easeInOutQuad: [0.455, 0.03, 0.515, 0.955],\n  easeInOutCubic: [0.645, 0.045, 0.355, 1.0],\n  easeInOutQuart: [0.77, 0.0, 0.175, 1.0],\n  easeInOutQuint: [0.86, 0.0, 0.07, 1.0],\n  easeInOutSine: [0.445, 0.05, 0.55, 0.95],\n  easeInOutExpo: [1.0, 0.0, 0.0, 1.0],\n  easeInOutCirc: [0.785, 0.135, 0.15, 0.86],\n  /* Ease Bounce Curves */\n  easeInBack: [0.6, -0.28, 0.735, 0.045],\n  easeOutBack: [0.175, 0.885, 0.32, 1.275],\n  easeInOutBack: [0.68, -0.55, 0.265, 1.55],\n};\n","import bezier, { EasingFunction } from 'bezier-easing';\nimport { ValidEasingPresets, EasingParams } from '../types';\nimport { easingPresets } from '../constants';\n\nexport function createEasingFunction(\n  easing: ValidEasingPresets | EasingParams | undefined\n): EasingFunction | undefined {\n  if (Array.isArray(easing)) {\n    return bezier(easing[0], easing[1], easing[2], easing[3]);\n  }\n  if (\n    typeof easing === 'string' &&\n    typeof easingPresets[easing] !== 'undefined'\n  ) {\n    const params: number[] = easingPresets[easing];\n    return bezier(params[0], params[1], params[2], params[3]);\n  }\n  return;\n}\n","import { CSSEffect, ScrollAxis, ValidScrollAxis } from '..';\nimport {\n  ParsedValueEffect,\n  ValidCSSEffects,\n  ParallaxElementConfig,\n  ParallaxStartEndEffects,\n  AllValidUnits,\n} from '../types';\nimport { parseValueAndUnit } from '../utils/parseValueAndUnit';\nimport { createEasingFunction } from './createEasingFunction';\n\nexport const PARALLAX_EFFECTS = Object.values(ValidCSSEffects);\n\nexport const MAP_EFFECT_TO_DEFAULT_UNIT: {\n  [key in ValidCSSEffects]: AllValidUnits;\n} = {\n  speed: 'px',\n  translateX: '%',\n  translateY: '%',\n  rotate: 'deg',\n  rotateX: 'deg',\n  rotateY: 'deg',\n  rotateZ: 'deg',\n  scale: '',\n  scaleX: '',\n  scaleY: '',\n  scaleZ: '',\n  opacity: '',\n};\n/**\n * Takes a parallax element effects and parses the properties to get the start and end values and units.\n */\nexport function parseElementTransitionEffects(\n  props: ParallaxElementConfig,\n  scrollAxis: ValidScrollAxis\n): ParallaxStartEndEffects {\n  const parsedEffects: { [key: string]: ParsedValueEffect } = {};\n\n  PARALLAX_EFFECTS.forEach((key: keyof typeof ValidCSSEffects) => {\n    const defaultValue: AllValidUnits = MAP_EFFECT_TO_DEFAULT_UNIT[key];\n\n    // If the provided type is a number, this must be the speed prop\n    // in which case we need to construct the proper translate config\n    if (typeof props?.[key] === 'number') {\n      const value = props?.[key] as number;\n      const startSpeed = `${(value || 0) * 10}px`;\n      const endSpeed = `${(value || 0) * -10}px`;\n\n      const startParsed = parseValueAndUnit(startSpeed);\n      const endParsed = parseValueAndUnit(endSpeed);\n\n      const speedConfig = {\n        start: startParsed.value,\n        end: endParsed.value,\n        unit: startParsed.unit,\n      };\n\n      // Manually set translate y value\n      if (scrollAxis === ScrollAxis.vertical) {\n        parsedEffects.translateY = speedConfig;\n      }\n\n      // Manually set translate y value\n      if (scrollAxis === ScrollAxis.horizontal) {\n        parsedEffects.translateX = speedConfig;\n      }\n    }\n\n    // The rest are standard effect being parsed\n    if (Array.isArray(props?.[key])) {\n      const value = props?.[key] as CSSEffect;\n\n      if (typeof value[0] !== 'undefined' && typeof value[1] !== 'undefined') {\n        const startParsed = parseValueAndUnit(value?.[0], defaultValue);\n        const endParsed = parseValueAndUnit(value?.[1], defaultValue);\n\n        const easing = createEasingFunction(value?.[2]);\n\n        parsedEffects[key] = {\n          start: startParsed.value,\n          end: endParsed.value,\n          unit: startParsed.unit,\n          easing,\n        };\n\n        if (startParsed.unit !== endParsed.unit) {\n          throw new Error(\n            'Must provide matching units for the min and max offset values of each axis.'\n          );\n        }\n      }\n    }\n  });\n\n  return parsedEffects;\n}\n","import bezier from 'bezier-easing';\n\n/**\n * Returns the percent (0 - 100) moved based on position in the viewport\n */\n\nexport function getProgressAmount(\n  /*\n   * The start value from cache\n   */\n  start: number,\n  /*\n   * total dist the element has to move to be 100% complete (view width/height + element width/height)\n   */\n  totalDist: number,\n  /*\n   * Current scroll value\n   */\n  currentScroll: number,\n  /*\n   * an optional easing function to apply\n   */\n  easing?: bezier.EasingFunction\n): number {\n  // adjust cached value\n  const startAdjustedScroll = currentScroll - start;\n\n  // Amount the element has moved based on current and total distance to move\n  let amount = startAdjustedScroll / totalDist;\n\n  // Apply bezier easing if provided\n  if (easing) {\n    amount = easing(amount);\n  }\n\n  return amount;\n}\n","/**\n * Takes two values (start, end) and returns whether the current scroll is within range\n * @param {number} start - start of scroll (x/y)\n * @param {number} end - end of scroll (x/y)\n * @param {number} scroll - current scroll (x/y)\n * @return {boolean} isInView\n */\n\nexport function isElementInView(\n  start: number,\n  end: number,\n  scroll: number\n): boolean {\n  const isInView = scroll >= start && scroll <= end;\n\n  return isInView;\n}\n","import { ParsedValueEffect } from '..';\nimport { AllValidUnits } from '../types';\nimport { scaleBetween } from '../utils/scaleBetween';\n\n/**\n * Scales a start and end value of an effect based on percent moved and easing function\n */\nexport function scaleEffectByProgress(\n  effect: ParsedValueEffect,\n  progress: number\n): {\n  value: number;\n  unit: AllValidUnits;\n} {\n  const value = scaleBetween(\n    typeof effect.easing === 'function' ? effect.easing(progress) : progress,\n    effect?.start || 0,\n    effect?.end || 0,\n    0,\n    1\n  );\n\n  return {\n    value,\n    unit: effect?.unit,\n  };\n}\n","// Scale between AKA normalize\nexport function scaleBetween(\n  value: number,\n  newMin: number,\n  newMax: number,\n  oldMin: number,\n  oldMax: number\n) {\n  return ((newMax - newMin) * (value - oldMin)) / (oldMax - oldMin) + newMin;\n}\n","import { Element } from '../classes/Element';\nimport { ParallaxStartEndEffects, ValidCSSEffects } from '../types';\nimport { scaleEffectByProgress } from './scaleEffectByProgress';\n\n// Exclude opacity from transforms\nconst TRANSFORM_EFFECTS = Object.values(ValidCSSEffects).filter(\n  v => v !== 'opacity'\n);\n\nexport function setWillChangeStyles(\n  el: HTMLElement,\n  effects: ParallaxStartEndEffects\n) {\n  const keys = Object.keys(effects);\n  const hasOpacity = keys.includes('opacity');\n  const willChange = `transform${hasOpacity ? ',opacity' : ''}`;\n  el.style.willChange = willChange;\n}\n\nexport function setElementStyles(\n  effects: ParallaxStartEndEffects,\n  progress: number,\n  el?: HTMLElement\n) {\n  if (!el) return;\n  const transform = getTransformStyles(effects, progress);\n  const opacity = getOpacityStyles(effects, progress);\n  el.style.transform = transform;\n  el.style.opacity = opacity;\n}\n\nexport function getOpacityStyles(\n  effects: ParallaxStartEndEffects,\n  progress: number\n): string {\n  const scaledOpacity =\n    effects['opacity'] && scaleEffectByProgress(effects['opacity'], progress);\n\n  if (\n    typeof scaledOpacity === 'undefined' ||\n    typeof scaledOpacity.value === 'undefined' ||\n    typeof scaledOpacity.unit === 'undefined'\n  ) {\n    return '';\n  }\n\n  const styleStr = `${scaledOpacity.value}`;\n\n  return styleStr;\n}\n\nexport function getTransformStyles(\n  effects: ParallaxStartEndEffects,\n  progress: number\n): string {\n  const transform: string = TRANSFORM_EFFECTS.reduce((acc, key: string) => {\n    const scaledEffect =\n      // @ts-expect-error\n      effects[key] && scaleEffectByProgress(effects[key], progress);\n\n    if (\n      typeof scaledEffect === 'undefined' ||\n      typeof scaledEffect.value === 'undefined' ||\n      typeof scaledEffect.unit === 'undefined'\n    ) {\n      return acc;\n    }\n\n    const styleStr = `${key}(${scaledEffect.value}${scaledEffect.unit})`;\n\n    return acc + styleStr;\n  }, '');\n\n  return transform;\n}\n\n/**\n * Takes a parallax element and removes parallax offset styles.\n * @param {object} element\n */\nexport function resetStyles(element: Element) {\n  const el = element.el;\n  if (!el) return;\n  el.style.transform = '';\n  el.style.opacity = '';\n}\n","export function getTranslateScalar(\n  startTranslatePx: number,\n  endTranslatePx: number,\n  totalDist: number\n) {\n  const slow = endTranslatePx > startTranslatePx;\n\n  // calculating necessary scale to increase translations\n  const totalAbsOff =\n    (Math.abs(startTranslatePx) + Math.abs(endTranslatePx)) * (slow ? -1 : 1);\n  const totalDistTrue = totalDist + totalAbsOff;\n\n  // Determine multiple to scale by, only values greater than 1\n  const scale = Math.max(totalDist / totalDistTrue, 1);\n\n  return scale;\n}\n","import { ParsedValueEffect } from '..';\n\n/**\n * Return the start and end pixel values for an elements translations\n */\nexport function getStartEndValueInPx(\n  translate: ParsedValueEffect,\n  elementSize: number\n) {\n  let { start, end, unit } = translate;\n\n  if (unit === '%') {\n    const scale = elementSize / 100;\n    start = start * scale;\n    end = end * scale;\n  }\n\n  return {\n    start,\n    end,\n  };\n}\n","import { ParsedValueEffect } from '../types';\nimport { Rect } from '../classes/Rect';\nimport { View } from '../classes/View';\nimport { Limits } from '../classes/Limits';\nimport { Scroll } from '../classes/Scroll';\n\nimport { getTranslateScalar } from './getTranslateScalar';\nimport { getStartEndValueInPx } from './getStartEndValueInPx';\nimport { ParallaxStartEndEffects, ScrollAxis, ValidScrollAxis } from '../types';\n\nconst DEFAULT_VALUE: ParsedValueEffect = {\n  start: 0,\n  end: 0,\n  unit: '',\n};\n\nexport function createLimitsWithTranslationsForRelativeElements(\n  rect: Rect,\n  view: View,\n  effects: ParallaxStartEndEffects,\n  scroll: Scroll,\n  scrollAxis: ValidScrollAxis,\n  shouldAlwaysCompleteAnimation?: boolean\n): Limits {\n  // get start and end accounting for percent effects\n  const translateX: ParsedValueEffect = effects.translateX || DEFAULT_VALUE;\n  const translateY: ParsedValueEffect = effects.translateY || DEFAULT_VALUE;\n\n  const {\n    start: startTranslateXPx,\n    end: endTranslateXPx,\n  } = getStartEndValueInPx(translateX, rect.width);\n  const {\n    start: startTranslateYPx,\n    end: endTranslateYPx,\n  } = getStartEndValueInPx(translateY, rect.height);\n\n  // default starting values\n  let startY = rect.top - view.height;\n  let startX = rect.left - view.width;\n  let endY = rect.bottom;\n  let endX = rect.right;\n\n  let startMultiplierY = 1;\n  let endMultiplierY = 1;\n  if (scrollAxis === ScrollAxis.vertical) {\n    startMultiplierY = getTranslateScalar(\n      startTranslateYPx,\n      endTranslateYPx,\n      view.height + rect.height\n    );\n    endMultiplierY = startMultiplierY;\n  }\n  let startMultiplierX = 1;\n  let endMultiplierX = 1;\n  if (scrollAxis === ScrollAxis.horizontal) {\n    startMultiplierX = getTranslateScalar(\n      startTranslateXPx,\n      endTranslateXPx,\n      view.width + rect.width\n    );\n    endMultiplierX = startMultiplierX;\n  }\n\n  // Apply the scale to initial values\n  if (startTranslateYPx < 0) {\n    startY = startY + startTranslateYPx * startMultiplierY;\n  }\n  if (endTranslateYPx > 0) {\n    endY = endY + endTranslateYPx * endMultiplierY;\n  }\n  if (startTranslateXPx < 0) {\n    startX = startX + startTranslateXPx * startMultiplierX;\n  }\n  if (endTranslateXPx > 0) {\n    endX = endX + endTranslateXPx * endMultiplierX;\n  }\n\n  // add scroll\n  startX += scroll.x;\n  endX += scroll.x;\n  startY += scroll.y;\n  endY += scroll.y;\n\n  // NOTE: please refactor and isolate this :(\n  if (shouldAlwaysCompleteAnimation) {\n    const topBeginsInView = scroll.y + rect.top < view.height;\n    const leftBeginsInView = scroll.x + rect.left < view.width;\n    const bottomEndsInView =\n      scroll.y + rect.bottom > view.scrollHeight - view.height;\n    const rightEndsInView =\n      scroll.x + rect.right > view.scrollWidth - view.height;\n\n    if (topBeginsInView && bottomEndsInView) {\n      startMultiplierY = 1;\n      endMultiplierY = 1;\n      startY = 0;\n      endY = view.scrollHeight - view.height;\n    }\n    if (leftBeginsInView && rightEndsInView) {\n      startMultiplierX = 1;\n      endMultiplierX = 1;\n      startX = 0;\n      endX = view.scrollWidth - view.width;\n    }\n\n    if (!topBeginsInView && bottomEndsInView) {\n      startY = rect.top - view.height + scroll.y;\n      endY = view.scrollHeight - view.height;\n      const totalDist = endY - startY;\n      startMultiplierY = getTranslateScalar(\n        startTranslateYPx,\n        endTranslateYPx,\n        totalDist\n      );\n      endMultiplierY = 1;\n      if (startTranslateYPx < 0) {\n        startY = startY + startTranslateYPx * startMultiplierY;\n      }\n    }\n    if (!leftBeginsInView && rightEndsInView) {\n      startX = rect.left - view.width + scroll.x;\n      endX = view.scrollWidth - view.width;\n      const totalDist = endX - startX;\n      startMultiplierX = getTranslateScalar(\n        startTranslateXPx,\n        endTranslateXPx,\n        totalDist\n      );\n      endMultiplierX = 1;\n      if (startTranslateXPx < 0) {\n        startX = startX + startTranslateXPx * startMultiplierX;\n      }\n    }\n\n    if (topBeginsInView && !bottomEndsInView) {\n      startY = 0;\n      endY = rect.bottom + scroll.y;\n      const totalDist = endY - startY;\n      startMultiplierY = 1;\n      endMultiplierY = getTranslateScalar(\n        startTranslateYPx,\n        endTranslateYPx,\n        totalDist\n      );\n      if (endTranslateYPx > 0) {\n        endY = endY + endTranslateYPx * endMultiplierY;\n      }\n    }\n    if (leftBeginsInView && !rightEndsInView) {\n      startX = 0;\n      endX = rect.right + scroll.x;\n      const totalDist = endX - startX;\n      startMultiplierX = 1;\n      endMultiplierX = getTranslateScalar(\n        startTranslateXPx,\n        endTranslateXPx,\n        totalDist\n      );\n      if (endTranslateXPx > 0) {\n        endX = endX + endTranslateXPx * endMultiplierX;\n      }\n    }\n  }\n\n  const limits = new Limits({\n    startX,\n    startY,\n    endX,\n    endY,\n    startMultiplierX,\n    endMultiplierX,\n    startMultiplierY,\n    endMultiplierY,\n  });\n\n  return limits;\n}\n","import bezier from 'bezier-easing';\nimport {\n  CreateElementOptions,\n  ParallaxElementConfig,\n  ParallaxStartEndEffects,\n  ScrollAxis,\n  ValidScrollAxis,\n  EasingParam,\n} from '../types';\nimport { createId } from '../utils/createId';\nimport { Rect } from './Rect';\nimport { View } from './View';\nimport { Scroll } from './Scroll';\nimport { Limits } from './Limits';\nimport { parseElementTransitionEffects } from '../helpers/parseElementTransitionEffects';\nimport { getProgressAmount } from '../helpers/getProgressAmount';\nimport { isElementInView } from '../helpers/isElementInView';\nimport {\n  resetStyles,\n  setElementStyles,\n  setWillChangeStyles,\n} from '../helpers/elementStyles';\nimport { createEasingFunction } from '../helpers/createEasingFunction';\nimport { createLimitsForRelativeElements } from '../helpers/createLimitsForRelativeElements';\nimport { createLimitsWithTranslationsForRelativeElements } from '../helpers/createLimitsWithTranslationsForRelativeElements';\nimport { scaleTranslateEffectsForSlowerScroll } from '../helpers/scaleTranslateEffectsForSlowerScroll';\nimport { getShouldScaleTranslateEffects } from '../helpers/getShouldScaleTranslateEffects';\n\ntype ElementConstructorOptions = CreateElementOptions & {\n  scrollAxis: ValidScrollAxis;\n};\n\nexport class Element {\n  el: HTMLElement;\n  props: ParallaxElementConfig;\n  scrollAxis: ValidScrollAxis;\n  id: number;\n  effects: ParallaxStartEndEffects;\n  isInView: boolean | null;\n  progress: number;\n  /* Optionally set if translate effect must be scaled */\n  scaledEffects?: ParallaxStartEndEffects;\n  rect?: Rect;\n  limits?: Limits;\n  easing?: bezier.EasingFunction;\n\n  updatePosition: (scroll: Scroll) => Element;\n\n  constructor(options: ElementConstructorOptions) {\n    this.el = options.el;\n    this.props = options.props;\n    this.scrollAxis = options.scrollAxis;\n    this.id = createId();\n    this.effects = parseElementTransitionEffects(this.props, this.scrollAxis);\n    this.isInView = null;\n    this.progress = 0;\n\n    this._setElementEasing(options.props.easing);\n\n    setWillChangeStyles(options.el, this.effects);\n\n    this.updatePosition =\n      options.scrollAxis === ScrollAxis.vertical\n        ? this._updatePositionVertical\n        : this._updatePositionHorizontal;\n  }\n\n  updateProps(nextProps: ParallaxElementConfig) {\n    this.props = { ...this.props, ...nextProps };\n    this.effects = parseElementTransitionEffects(nextProps, this.scrollAxis);\n    this._setElementEasing(nextProps.easing);\n\n    return this;\n  }\n\n  setCachedAttributes(view: View, scroll: Scroll): Element {\n    // NOTE: Must reset styles before getting the rect, as it might impact the natural position\n    resetStyles(this);\n\n    this.rect = new Rect({\n      el: this.props.targetElement || this.el,\n      rootMargin: this.props.rootMargin,\n      view,\n    });\n\n    const shouldScaleTranslateEffects = getShouldScaleTranslateEffects(\n      this.props,\n      this.effects,\n      this.scrollAxis\n    );\n\n    if (\n      typeof this.props.startScroll === 'number' &&\n      typeof this.props.endScroll === 'number'\n    ) {\n      this.limits = new Limits({\n        startX: this.props.startScroll,\n        startY: this.props.startScroll,\n        endX: this.props.endScroll,\n        endY: this.props.endScroll,\n      });\n      return this;\n    }\n\n    if (shouldScaleTranslateEffects) {\n      this.limits = createLimitsWithTranslationsForRelativeElements(\n        this.rect,\n        view,\n        this.effects,\n        scroll,\n        this.scrollAxis,\n        this.props.shouldAlwaysCompleteAnimation\n      );\n\n      this.scaledEffects = scaleTranslateEffectsForSlowerScroll(\n        this.effects,\n        this.limits\n      );\n    } else {\n      this.limits = createLimitsForRelativeElements(\n        this.rect,\n        view,\n        scroll,\n        this.props.shouldAlwaysCompleteAnimation\n      );\n    }\n\n    this._setElementStyles();\n\n    return this;\n  }\n\n  _updateElementIsInView(nextIsInView: boolean) {\n    // NOTE: Check if this is the first change to make sure onExit isn't called\n    const isFirstChange = this.isInView === null;\n    if (nextIsInView !== this.isInView) {\n      if (nextIsInView) {\n        this.props.onEnter && this.props.onEnter();\n      } else if (!isFirstChange) {\n        this._setFinalStylesAndProgress();\n        this.props.onExit && this.props.onExit();\n      }\n    }\n    this.isInView = nextIsInView;\n  }\n\n  _setFinalStylesAndProgress() {\n    const finalProgress = Math.round(this.progress);\n    this._updateElementProgress(finalProgress);\n  }\n\n  _setElementStyles() {\n    if (this.props.disabled) return;\n    const effects = this.scaledEffects || this.effects;\n    setElementStyles(effects, this.progress, this.el);\n  }\n\n  _updateElementProgress(nextProgress: number) {\n    this.progress = nextProgress;\n    this.props.onProgressChange && this.props.onProgressChange(this.progress);\n    this.props.onChange && this.props.onChange(this);\n    this._setElementStyles();\n  }\n\n  _setElementEasing(easing?: EasingParam): void {\n    this.easing = createEasingFunction(easing);\n  }\n\n  _updatePositionHorizontal(scroll: Scroll): Element {\n    if (!this.limits) return this;\n\n    const nextIsInView = isElementInView(\n      this.limits.startX,\n      this.limits.endX,\n      scroll.x\n    );\n    this._updateElementIsInView(nextIsInView);\n\n    if (!nextIsInView) return this;\n\n    const nextProgress = getProgressAmount(\n      this.limits.startX,\n      this.limits.totalX,\n      scroll.x,\n      this.easing\n    );\n\n    this._updateElementProgress(nextProgress);\n\n    return this;\n  }\n\n  _updatePositionVertical(scroll: Scroll): Element {\n    if (!this.limits) return this;\n\n    const nextIsInView = isElementInView(\n      this.limits.startY,\n      this.limits.endY,\n      scroll.y\n    );\n\n    this._updateElementIsInView(nextIsInView);\n\n    if (!this.isInView) return this;\n\n    const nextProgress = getProgressAmount(\n      this.limits.startY,\n      this.limits.totalY,\n      scroll.y,\n      this.easing\n    );\n\n    this._updateElementProgress(nextProgress);\n\n    return this;\n  }\n}\n","import { ScrollAxis, ValidScrollAxis } from '../types';\nimport { ParallaxElementConfig, ParallaxStartEndEffects } from '../types';\n\nexport function getShouldScaleTranslateEffects(\n  props: ParallaxElementConfig,\n  effects: ParallaxStartEndEffects,\n  scrollAxis: ValidScrollAxis\n): boolean {\n  if (\n    props.rootMargin ||\n    props.targetElement ||\n    props.shouldDisableScalingTranslations\n  ) {\n    return false;\n  }\n\n  if (\n    (!!effects.translateX && scrollAxis === ScrollAxis.horizontal) ||\n    (!!effects.translateY && scrollAxis === ScrollAxis.vertical)\n  ) {\n    return true;\n  }\n\n  return false;\n}\n","import { ParsedValueEffect, ParallaxStartEndEffects } from '../types';\nimport { Limits } from '../classes/Limits';\n\nexport function scaleTranslateEffectsForSlowerScroll(\n  effects: ParallaxStartEndEffects,\n  limits: Limits\n): ParallaxStartEndEffects {\n  const effectsCopy = {\n    ...effects,\n  };\n\n  if (effectsCopy.translateX) {\n    effectsCopy.translateX = {\n      ...effects.translateX,\n      start: effectsCopy.translateX.start * limits.startMultiplierX,\n      end: effectsCopy.translateX.end * limits.endMultiplierX,\n    } as ParsedValueEffect;\n  }\n  if (effectsCopy.translateY) {\n    effectsCopy.translateY = {\n      ...effects.translateY,\n      start: effectsCopy.translateY.start * limits.startMultiplierY,\n      end: effectsCopy.translateY.end * limits.endMultiplierY,\n    } as ParsedValueEffect;\n  }\n\n  return effectsCopy;\n}\n","import { Rect, Scroll, View } from '..';\nimport { Limits } from '../classes/Limits';\n\nexport function createLimitsForRelativeElements(\n  rect: Rect,\n  view: View,\n  scroll: Scroll,\n  shouldAlwaysCompleteAnimation?: boolean\n): Limits {\n  let startY = rect.top - view.height;\n  let startX = rect.left - view.width;\n  let endY = rect.bottom;\n  let endX = rect.right;\n\n  // add scroll\n  startX += scroll.x;\n  endX += scroll.x;\n  startY += scroll.y;\n  endY += scroll.y;\n\n  if (shouldAlwaysCompleteAnimation) {\n    if (scroll.y + rect.top < view.height) {\n      startY = 0;\n    }\n    if (scroll.x + rect.left < view.width) {\n      startX = 0;\n    }\n    if (endY > view.scrollHeight - view.height) {\n      endY = view.scrollHeight - view.height;\n    }\n    if (endX > view.scrollWidth - view.width) {\n      endX = view.scrollWidth - view.width;\n    }\n  }\n\n  const limits = new Limits({\n    startX,\n    startY,\n    endX,\n    endY,\n  });\n\n  return limits;\n}\n","export type ViewSizeParams = {\n  width: number;\n  height: number;\n  scrollHeight: number;\n  scrollWidth: number;\n};\nexport class View {\n  scrollContainer: HTMLElement | undefined;\n  width: number;\n  height: number;\n  scrollHeight: number;\n  scrollWidth: number;\n\n  constructor(config: {\n    width: number;\n    height: number;\n    scrollHeight: number;\n    scrollWidth: number;\n    scrollContainer?: HTMLElement;\n  }) {\n    this.scrollContainer = config.scrollContainer;\n    this.width = config.width;\n    this.height = config.height;\n    this.scrollHeight = config.scrollHeight;\n    this.scrollWidth = config.scrollWidth;\n  }\n\n  hasChanged(params: ViewSizeParams) {\n    if (\n      params.width !== this.width ||\n      params.height !== this.height ||\n      params.scrollWidth !== this.scrollWidth ||\n      params.scrollHeight !== this.scrollHeight\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  setSize(params: ViewSizeParams) {\n    this.width = params.width;\n    this.height = params.height;\n    this.scrollHeight = params.scrollHeight;\n    this.scrollWidth = params.scrollWidth;\n    return this;\n  }\n}\n","export class Scroll {\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n    this.dx = 0;\n    this.dy = 0;\n  }\n\n  setScroll(x: number, y: number) {\n    this.dx = x - this.x;\n    this.dy = y - this.y;\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n}\n","import { resetStyles } from '../helpers/elementStyles';\nimport { View } from './View';\nimport { Scroll } from './Scroll';\nimport { Element } from './Element';\nimport { testForPassiveScroll } from '../utils/testForPassiveScroll';\nimport {\n  CreateElementOptions,\n  ParallaxControllerOptions,\n  ParallaxElementConfig,\n  ScrollAxis,\n  ValidScrollAxis,\n  ViewElement,\n} from '../types';\n\n/**\n * -------------------------------------------------------\n * Parallax Controller\n * -------------------------------------------------------\n *\n * The global controller for setting up and managing a scroll view of elements.\n *\n */\n\nexport class ParallaxController {\n  elements: Element[];\n  scrollAxis: ValidScrollAxis;\n  viewEl: ViewElement;\n  scroll: Scroll;\n  view: View;\n  _hasScrollContainer: boolean;\n  _ticking: boolean;\n  _supportsPassive: boolean;\n  _resizeObserver?: ResizeObserver;\n\n  /**\n   * Static method to instantiate the ParallaxController.\n   * @returns {Class} ParallaxController\n   */\n  static init(options: ParallaxControllerOptions): ParallaxController {\n    const hasWindow = typeof window !== 'undefined';\n\n    if (!hasWindow) {\n      throw new Error(\n        'Looks like ParallaxController.init() was called on the server. This method must be called on the client.'\n      );\n    }\n\n    return new ParallaxController(options);\n  }\n\n  constructor({\n    scrollAxis = ScrollAxis.vertical,\n    scrollContainer,\n  }: ParallaxControllerOptions) {\n    this.scrollAxis = scrollAxis;\n    // All parallax elements to be updated\n    this.elements = [];\n\n    this._hasScrollContainer = !!scrollContainer;\n    this.viewEl = scrollContainer ?? window;\n\n    // Scroll and View\n    const [x, y] = this._getScrollPosition();\n    this.scroll = new Scroll(x, y);\n\n    this.view = new View({\n      width: 0,\n      height: 0,\n      scrollWidth: 0,\n      scrollHeight: 0,\n      scrollContainer: this._hasScrollContainer ? scrollContainer : undefined,\n    });\n\n    // Ticking\n    this._ticking = false;\n\n    // Passive support\n    this._supportsPassive = testForPassiveScroll();\n\n    // Bind methods to class\n    this._bindAllMethods();\n    this._addListeners(this.viewEl);\n    this._addResizeObserver();\n    this._setViewSize();\n  }\n\n  _bindAllMethods() {\n    [\n      '_addListeners',\n      '_removeListeners',\n      '_getScrollPosition',\n      '_handleScroll',\n      '_handleUpdateCache',\n      '_updateAllElements',\n      '_updateElementPosition',\n      '_setViewSize',\n      '_addResizeObserver',\n      '_checkIfViewHasChanged',\n      '_getViewParams',\n      'getElements',\n      'createElement',\n      'removeElementById',\n      'resetElementStyles',\n      'updateElementPropsById',\n      'update',\n      'updateScrollContainer',\n      'destroy',\n    ].forEach((method: string) => {\n      // @ts-expect-error\n      this[method] = this[method].bind(this);\n    });\n  }\n\n  _addListeners(el: ViewElement) {\n    el.addEventListener(\n      'scroll',\n      this._handleScroll,\n      this._supportsPassive ? { passive: true } : false\n    );\n    window.addEventListener('resize', this._handleUpdateCache, false);\n    window.addEventListener('blur', this._handleUpdateCache, false);\n    window.addEventListener('focus', this._handleUpdateCache, false);\n    window.addEventListener('load', this._handleUpdateCache, false);\n  }\n\n  _removeListeners(el: ViewElement) {\n    el.removeEventListener('scroll', this._handleScroll, false);\n    window.removeEventListener('resize', this._handleUpdateCache, false);\n    window.removeEventListener('blur', this._handleUpdateCache, false);\n    window.removeEventListener('focus', this._handleUpdateCache, false);\n    window.removeEventListener('load', this._handleUpdateCache, false);\n    this._resizeObserver?.disconnect();\n  }\n\n  _addResizeObserver() {\n    try {\n      const observedEl: HTMLElement = this._hasScrollContainer\n        ? (this.viewEl as HTMLElement)\n        : document.documentElement;\n      this._resizeObserver = new ResizeObserver(() => this.update());\n      this._resizeObserver.observe(observedEl);\n    } catch (e) {\n      console.warn(\n        'Failed to create the resize observer in the ParallaxContoller'\n      );\n    }\n  }\n\n  _getScrollPosition() {\n    // Save current scroll\n    // Supports IE 9 and up.\n    const nx = this._hasScrollContainer\n      ? // @ts-expect-error\n        this.viewEl.scrollLeft\n      : window.pageXOffset;\n    const ny = this._hasScrollContainer\n      ? // @ts-expect-error\n        this.viewEl.scrollTop\n      : window.pageYOffset;\n\n    return [nx, ny];\n  }\n\n  /**\n   * Window scroll handler sets scroll position\n   * and then calls '_updateAllElements()'.\n   */\n  _handleScroll() {\n    const [nx, ny] = this._getScrollPosition();\n    this.scroll.setScroll(nx, ny);\n\n    // Only called if the last animation request has been\n    // completed and there are parallax elements to update\n    if (!this._ticking && this.elements.length > 0) {\n      this._ticking = true;\n      // @ts-ignore\n      window.requestAnimationFrame(this._updateAllElements);\n    }\n  }\n\n  /**\n   * Window resize handler. Sets the new window inner height\n   * then updates parallax element attributes and positions.\n   */\n  _handleUpdateCache() {\n    this._setViewSize();\n    this._updateAllElements({ updateCache: true });\n  }\n\n  /**\n   * Update element positions.\n   * Determines if the element is in view based on the cached\n   * attributes, if so set the elements parallax styles.\n   */\n  _updateAllElements({ updateCache }: { updateCache?: boolean } = {}) {\n    if (this.elements) {\n      this.elements.forEach(element => {\n        if (updateCache) {\n          element.setCachedAttributes(this.view, this.scroll);\n        }\n        this._updateElementPosition(element);\n      });\n    }\n    // reset ticking so more animations can be called\n    this._ticking = false;\n  }\n\n  /**\n   * Update element positions.\n   * Determines if the element is in view based on the cached\n   * attributes, if so set the elements parallax styles.\n   */\n  _updateElementPosition(element: Element) {\n    if (element.props.disabled) return;\n    element.updatePosition(this.scroll);\n  }\n\n  /**\n   * Gets the params to set in the View from the scroll container or the window\n   */\n  _getViewParams(): {\n    width: number;\n    height: number;\n    scrollHeight: number;\n    scrollWidth: number;\n  } {\n    if (this._hasScrollContainer) {\n      // @ts-expect-error\n      const width = this.viewEl.offsetWidth;\n      // @ts-expect-error\n      const height = this.viewEl.offsetHeight;\n      // @ts-expect-error\n      const scrollHeight = this.viewEl.scrollHeight;\n      // @ts-expect-error\n      const scrollWidth = this.viewEl.scrollWidth;\n      return this.view.setSize({ width, height, scrollHeight, scrollWidth });\n    }\n\n    const html = document.documentElement;\n    const width = window.innerWidth || html.clientWidth;\n    const height = window.innerHeight || html.clientHeight;\n    const scrollHeight = html.scrollHeight;\n    const scrollWidth = html.scrollWidth;\n\n    return { width, height, scrollHeight, scrollWidth };\n  }\n\n  /**\n   * Cache the view attributes\n   */\n  _setViewSize() {\n    return this.view.setSize(this._getViewParams());\n  }\n\n  /**\n   * Checks if any of the cached attributes of the view have changed.\n   * @returns boolean\n   */\n  _checkIfViewHasChanged() {\n    return this.view.hasChanged(this._getViewParams());\n  }\n\n  /**\n   * -------------------------------------------------------\n   * Public methods\n   * -------------------------------------------------------\n   */\n\n  /**\n   * Returns all the parallax elements in the controller\n   */\n  getElements(): Element[] {\n    return this.elements;\n  }\n\n  /**\n   * Creates and returns new parallax element with provided options to be managed by the controller.\n   */\n  createElement(options: CreateElementOptions): Element {\n    const newElement = new Element({ ...options, scrollAxis: this.scrollAxis });\n    newElement.setCachedAttributes(this.view, this.scroll);\n    this.elements = this.elements\n      ? [...this.elements, newElement]\n      : [newElement];\n    this._updateElementPosition(newElement);\n\n    // NOTE: This checks if the view has changed then update the controller and all elements if it has\n    // This shouldn't always be necessary with a resize observer watching the view element\n    // but there seems to be cases where the resize observer does not catch and update.\n    if (this._checkIfViewHasChanged()) {\n      this.update();\n    }\n    return newElement;\n  }\n\n  /**\n   * Remove an element by id\n   */\n  removeElementById(id: number) {\n    if (!this.elements) return;\n    this.elements = this.elements.filter(el => el.id !== id);\n  }\n\n  /**\n   * Updates an existing parallax element object with new options.\n   */\n  updateElementPropsById(id: number, props: ParallaxElementConfig): void {\n    if (this.elements) {\n      this.elements = this.elements.map(el => {\n        if (el.id === id) {\n          return el.updateProps(props);\n        }\n        return el;\n      });\n    }\n\n    this.update();\n  }\n\n  /**\n   * Remove a target elements parallax styles\n   */\n  resetElementStyles(element: Element) {\n    resetStyles(element);\n  }\n\n  /**\n   * Updates all cached attributes on parallax elements.\n   */\n  update() {\n    // Save the latest scroll position because window.scroll\n    // may be called and the handle scroll event may not be called.\n    const [nx, ny] = this._getScrollPosition();\n    this.scroll.setScroll(nx, ny);\n\n    this._setViewSize();\n    this._updateAllElements({ updateCache: true });\n  }\n  /**\n   * Updates the scroll container of the parallax controller\n   */\n  updateScrollContainer(el: HTMLElement) {\n    // remove existing listeners with current el first\n    this._removeListeners(this.viewEl);\n\n    this.viewEl = el;\n    this._hasScrollContainer = !!el;\n    this.view = new View({\n      width: 0,\n      height: 0,\n      scrollWidth: 0,\n      scrollHeight: 0,\n      scrollContainer: el,\n    });\n    this._setViewSize();\n    this._addListeners(this.viewEl);\n    this._updateAllElements({ updateCache: true });\n  }\n\n  /**\n   * Removes all listeners and resets all styles on managed elements.\n   */\n  destroy() {\n    this._removeListeners(this.viewEl);\n    if (this.elements) {\n      this.elements.forEach(element => resetStyles(element));\n    }\n    // @ts-expect-error\n    this.elements = undefined;\n  }\n}\n","export function testForPassiveScroll() {\n  let supportsPassiveOption = false;\n  try {\n    const opts = Object.defineProperty({}, 'passive', {\n      get() {\n        supportsPassiveOption = true;\n        return true;\n      },\n    });\n    // @ts-expect-error\n    window.addEventListener('test', null, opts);\n    // @ts-expect-error\n    window.removeEventListener('test', null, opts);\n  } catch (e) {}\n  return supportsPassiveOption;\n}\n","import { ParallaxElementConfig } from 'parallax-controller';\nimport { removeUndefinedObjectKeys } from '../utils/removeUndefinedObjectKeys';\n\nexport function getIsolatedParallaxProps(props: any): {\n  parallaxProps: ParallaxElementConfig;\n  rest: Record<string, any>;\n} {\n  const {\n    disabled,\n    easing,\n    endScroll,\n    onChange,\n    onEnter,\n    onExit,\n    onProgressChange,\n    opacity,\n    rootMargin,\n    rotate,\n    rotateX,\n    rotateY,\n    rotateZ,\n    scale,\n    scaleX,\n    scaleY,\n    scaleZ,\n    shouldAlwaysCompleteAnimation,\n    shouldDisableScalingTranslations,\n    speed,\n    startScroll,\n    targetElement,\n    translateX,\n    translateY,\n    ...rest\n  } = props;\n\n  const parallaxProps = removeUndefinedObjectKeys({\n    disabled,\n    easing,\n    endScroll,\n    onChange,\n    onEnter,\n    onExit,\n    onProgressChange,\n    opacity,\n    rootMargin,\n    rotate,\n    rotateX,\n    rotateY,\n    rotateZ,\n    scale,\n    scaleX,\n    scaleY,\n    scaleZ,\n    shouldAlwaysCompleteAnimation,\n    shouldDisableScalingTranslations,\n    speed,\n    startScroll,\n    targetElement,\n    translateX,\n    translateY,\n  });\n\n  return {\n    parallaxProps,\n    rest,\n  };\n}\n","export function removeUndefinedObjectKeys(obj: { [key: string]: any }) {\n  Object.keys(obj).forEach((key) =>\n    obj[key] === undefined ? delete obj[key] : {}\n  );\n  return obj;\n}\n","import React from 'react';\nimport { ParallaxController } from 'parallax-controller';\n\nexport const ParallaxContext = React.createContext<ParallaxController | null>(\n  null\n);\n","import { CreateElementOptions, Element } from 'parallax-controller';\nimport { useEffect, useRef, useState } from 'react';\nimport { useVerifyController } from '../components/Parallax/hooks';\nimport { ParallaxProps } from '../components/Parallax/types';\nimport { getIsolatedParallaxProps } from '../helpers/getIsolatedParallaxProps';\nimport { useParallaxController } from './useParallaxController';\n\nexport function useParallax<T extends HTMLElement>(props: ParallaxProps) {\n  const controller = useParallaxController();\n  const ref = useRef<T>(null);\n  const { parallaxProps } = getIsolatedParallaxProps(props);\n\n  useVerifyController(controller);\n\n  const [element, setElement] = useState<Element>();\n\n  // create element\n  useEffect(() => {\n    let newElement: Element | undefined;\n    if (ref.current instanceof HTMLElement) {\n      const options: CreateElementOptions = {\n        el: ref.current,\n        props: parallaxProps,\n      };\n      newElement = controller?.createElement(options);\n      setElement(newElement);\n    } else {\n      throw new Error(\n        'You must assign the ref returned by the useParallax() hook to an HTML Element.'\n      );\n    }\n\n    return () => {\n      if (newElement) {\n        controller?.removeElementById(newElement.id);\n      }\n    };\n  }, []);\n\n  // update element\n  useEffect(() => {\n    if (element) {\n      if (props.disabled) {\n        controller?.resetElementStyles(element);\n      } else {\n        controller?.updateElementPropsById(element.id, parallaxProps);\n      }\n    }\n  }, [\n    props.disabled,\n    props.easing,\n    props.endScroll,\n    props.onChange,\n    props.onEnter,\n    props.onExit,\n    props.onProgressChange,\n    props.opacity,\n    props.rootMargin,\n    props.rotate,\n    props.rotateX,\n    props.rotateY,\n    props.rotateZ,\n    props.scale,\n    props.scaleX,\n    props.scaleY,\n    props.scaleZ,\n    props.shouldAlwaysCompleteAnimation,\n    props.shouldDisableScalingTranslations,\n    props.speed,\n    props.startScroll,\n    props.targetElement,\n    props.translateX,\n    props.translateY,\n  ]);\n\n  return { ref, controller, element };\n}\n","import { useContext } from 'react';\nimport { ParallaxController } from 'parallax-controller';\nimport { ParallaxContext } from '../context/ParallaxContext';\n\nexport function useParallaxController(): ParallaxController | null {\n  const parallaxController = useContext(ParallaxContext);\n  const isServer = typeof window === 'undefined';\n  if (isServer) {\n    return null;\n  }\n\n  if (!parallaxController) {\n    throw new Error(\n      'Could not find `react-scroll-parallax` context value. Please ensure the component is wrapped in a <ParallaxProvider>'\n    );\n  }\n\n  return parallaxController;\n}\n","import { ParallaxController } from 'parallax-controller';\nimport { useEffect } from 'react';\n\nexport function useVerifyController(controller: ParallaxController | unknown) {\n  useEffect(() => {\n    const isServer = typeof window === 'undefined';\n    // Make sure the provided controller is an instance of the Parallax Controller\n    const isInstance = controller instanceof ParallaxController;\n    // Throw if neither context or global is available\n    if (!isServer && !controller && !isInstance) {\n      throw new Error(\n        \"Must wrap your application's <Parallax /> components in a <ParallaxProvider />.\"\n      );\n    }\n  }, [controller]);\n}\n","import { parseValueAndUnit } from 'parallax-controller';\nimport { BannerLayer } from '../types';\n\nconst FALLBACK_RECT = {\n  height: 0,\n};\n\nexport function getExpandedStyle(layer: BannerLayer) {\n  if (Array.isArray(layer.translateY)) {\n    const translateYStart = parseValueAndUnit(layer.translateY[0]);\n    const translateYEnd = parseValueAndUnit(layer.translateY[1]);\n\n    if (translateYStart.unit === 'px' && translateYEnd.unit === 'px') {\n      return {\n        top: `${Math.abs(translateYEnd.value) * -1}px`,\n        bottom: `${Math.abs(translateYStart.value) * -1}px`,\n      };\n    }\n\n    if (translateYStart.unit === '%' && translateYEnd.unit === '%') {\n      const clientRect =\n        layer.targetElement?.getBoundingClientRect() || FALLBACK_RECT;\n      const top = Math.abs(clientRect.height * 0.01 * translateYEnd.value) * -1;\n      const bottom =\n        Math.abs(clientRect.height * 0.01 * translateYStart.value) * -1;\n      return {\n        top: `${top}px`,\n        bottom: `${bottom}px`,\n      };\n    }\n  }\n  if (layer.speed) {\n    const speed = layer.speed || 0;\n\n    return {\n      top: Math.abs(speed) * 10 * -1 + 'px',\n      bottom: Math.abs(speed) * 10 * -1 + 'px',\n    };\n  }\n  return {};\n}\n","import React, { CSSProperties } from 'react';\nimport { useParallax } from '../../../hooks/useParallax';\nimport { getIsolatedParallaxProps } from '../../../helpers/getIsolatedParallaxProps';\nimport { getExpandedStyle } from '../helpers/getExpandedStyle';\nimport { getImageStyle } from '../helpers/getImageStyle';\nimport { BannerLayer } from '../types';\n\nconst absoluteStyle: CSSProperties = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n};\n\nexport const ParallaxBannerLayer = (\n  props: BannerLayer & { testId: string }\n) => {\n  const { parallaxProps, rest } = getIsolatedParallaxProps(props);\n  const {\n    children,\n    disabled,\n    style,\n    expanded = true,\n    image,\n    testId,\n    ...divProps\n  } = rest;\n\n  const imageStyle = getImageStyle(props);\n  const expandedStyle = expanded ? getExpandedStyle(props) : {};\n  const parallax = useParallax<HTMLDivElement>({\n    targetElement: props.targetElement,\n    shouldDisableScalingTranslations: true,\n    ...parallaxProps,\n  });\n\n  return (\n    <div\n      data-testid={testId}\n      ref={parallax.ref}\n      style={{\n        ...imageStyle,\n        ...absoluteStyle,\n        ...expandedStyle,\n        ...style,\n      }}\n      {...divProps}\n    >\n      {rest.children}\n    </div>\n  );\n};\n","import { BannerLayer } from '../types';\n\nexport function getImageStyle(layer: BannerLayer) {\n  return layer.image\n    ? {\n        backgroundImage: `url(${layer.image})`,\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n      }\n    : {};\n}\n","import React, {\n  PropsWithChildren,\n  CSSProperties,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { ParallaxBannerLayer } from './components/ParallaxBannerLayer';\nimport { ParallaxBannerProps } from './types';\n\nconst containerStyle: CSSProperties = {\n  position: 'relative',\n  overflow: 'hidden',\n  width: '100%',\n};\n\nexport const ParallaxBanner = (\n  props: PropsWithChildren<ParallaxBannerProps>\n) => {\n  const [targetElement, setTargetElement] = useState<HTMLDivElement | null>(\n    null\n  );\n  const containerRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    setTargetElement(containerRef.current);\n  }, []);\n  const {\n    disabled: disableAllLayers,\n    style: rootStyle,\n    layers = [],\n    ...rootRest\n  } = props;\n  return (\n    <div\n      ref={containerRef}\n      style={{ ...containerStyle, ...rootStyle }}\n      {...rootRest}\n    >\n      {layers.map(\n        (layer, i) =>\n          targetElement && (\n            <ParallaxBannerLayer\n              {...layer}\n              targetElement={targetElement}\n              key={`layer-${i}`}\n              testId={`layer-${i}`}\n            />\n          )\n      )}\n      {props.children}\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nimport { ParallaxContext } from '../../context/ParallaxContext';\nimport { ParallaxController, ScrollAxis } from 'parallax-controller';\nimport { ParallaxProviderProps } from './types';\nimport { createController } from './helpers';\n\nexport class ParallaxProvider extends Component<ParallaxProviderProps, {}> {\n  static defaultProps = {\n    scrollAxis: ScrollAxis.vertical,\n  };\n\n  controller: ParallaxController | null;\n\n  constructor(props: ParallaxProviderProps) {\n    super(props);\n    this.controller = createController({\n      scrollAxis: props.scrollAxis,\n      scrollContainer: props.scrollContainer,\n    });\n  }\n\n  componentDidUpdate(prevProps: ParallaxProviderProps) {\n    if (prevProps.scrollContainer !== this.props.scrollContainer) {\n      // @ts-ignore\n      this.controller.updateScrollContainer(this.props.scrollContainer);\n    }\n  }\n\n  componentWillUnmount() {\n    // @ts-ignore\n    this.controller = this.controller.destroy();\n  }\n\n  render() {\n    const { children } = this.props;\n    return (\n      // @ts-ignore\n      <ParallaxContext.Provider value={this.controller}>\n        {children}\n      </ParallaxContext.Provider>\n    );\n  }\n}\n","import {\n  ParallaxController,\n  ParallaxControllerOptions,\n} from 'parallax-controller';\n\nexport const createController = (options: ParallaxControllerOptions) => {\n  // Don't initialize on the server\n  const isServer = typeof window === 'undefined';\n\n  if (!isServer) {\n    // Must not be the server so kick it off...\n    return ParallaxController.init(options);\n  }\n  return null;\n};\n"],"names":["kSampleStepSize","float32ArraySupported","Float32Array","A","aA1","aA2","B","C","calcBezier","aT","getSlope","LinearEasing","x","module","exports","mX1","mY1","mX2","mY2","Error","sampleValues","Array","i","getTForX","aX","intervalStart","currentSample","kSplineTableSize","guessForT","initialSlope","aGuessT","currentSlope","newtonRaphsonIterate","aA","aB","currentX","currentT","Math","abs","binarySubdivide","Badge","React","ref","bsPrefix","bg","pill","text","className","as","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","defaultProps","Limits","this","properties","endX","endY","ValidCSSEffects","Units","RotationUnits","ScaleUnits","ScrollAxis","EasingPreset","id","Rect","rect","options","scrollRect","top","right","bottom","left","_setRectWithRootMargin","totalRootY","rootMargin","totalRootX","VALID_UNITS","parseValueAndUnit","str","defaultUnit","out","value","unit","String","parseFloat","easingPresets","ease","easeIn","easeOut","easeInOut","easeInQuad","easeInCubic","easeInQuart","easeInQuint","easeInSine","easeInExpo","easeInCirc","easeOutQuad","easeOutCubic","easeOutQuart","easeOutQuint","easeOutSine","easeOutExpo","easeOutCirc","easeInOutQuad","easeInOutCubic","easeInOutQuart","easeInOutQuint","easeInOutSine","easeInOutExpo","easeInOutCirc","easeInBack","easeOutBack","easeInOutBack","createEasingFunction","easing","bezier","params","PARALLAX_EFFECTS","Object","MAP_EFFECT_TO_DEFAULT_UNIT","speed","translateX","translateY","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","opacity","parseElementTransitionEffects","scrollAxis","parsedEffects","defaultValue","endSpeed","startParsed","endParsed","speedConfig","start","end","getProgressAmount","totalDist","currentScroll","amount","isElementInView","scroll","scaleEffectByProgress","effect","progress","newMin","newMax","oldMin","oldMax","scaleBetween","TRANSFORM_EFFECTS","v","setElementStyles","effects","el","transform","scaledEffect","acc","key","getTransformStyles","scaledOpacity","getOpacityStyles","resetStyles","element","getTranslateScalar","startTranslatePx","endTranslatePx","slow","totalDistTrue","getStartEndValueInPx","translate","elementSize","DEFAULT_VALUE","Element","willChange","keys","setWillChangeStyles","updateProps","nextProps","setCachedAttributes","targetElement","view","shouldScaleTranslateEffects","startX","startY","endScroll","shouldAlwaysCompleteAnimation","startTranslateXPx","endTranslateXPx","startTranslateYPx","endTranslateYPx","startMultiplierY","endMultiplierY","startMultiplierX","endMultiplierX","topBeginsInView","leftBeginsInView","bottomEndsInView","rightEndsInView","createLimitsWithTranslationsForRelativeElements","limits","effectsCopy","scaleTranslateEffectsForSlowerScroll","createLimitsForRelativeElements","_updateElementIsInView","isFirstChange","isInView","nextIsInView","_setFinalStylesAndProgress","finalProgress","_setElementStyles","scaledEffects","_updateElementProgress","onProgressChange","onChange","_setElementEasing","_updatePositionHorizontal","nextProgress","_updatePositionVertical","View","config","hasChanged","setSize","Scroll","setScroll","y","ParallaxController","vertical","scrollContainer","width","height","scrollWidth","scrollHeight","_hasScrollContainer","undefined","supportsPassiveOption","opts","get","window","e","testForPassiveScroll","_bindAllMethods","_addListeners","_supportsPassive","passive","_removeListeners","_addResizeObserver","observedEl","document","ResizeObserver","console","_getScrollPosition","_handleScroll","nx","ny","elements","length","_handleUpdateCache","updateCache","_updateAllElements","_updateElementPosition","_getViewParams","viewEl","html","_setViewSize","_checkIfViewHasChanged","getElements","createElement","newElement","removeElementById","filter","updateElementPropsById","map","resetElementStyles","update","updateScrollContainer","destroy","getIsolatedParallaxProps","obj","disabled","onEnter","onExit","shouldDisableScalingTranslations","startScroll","rest","parallaxProps","ParallaxContext","useParallax","controller","parallaxController","useContext","useParallaxController","useRef","useEffect","useVerifyController","useState","setElement","FALLBACK_RECT","absoluteStyle","position","ParallaxBannerLayer","layer","style","expanded","testId","divProps","imageStyle","backgroundImage","backgroundPosition","backgroundSize","expandedStyle","translateYStart","translateYEnd","clientRect","getExpandedStyle","parallax","containerStyle","overflow","ParallaxBanner","setTargetElement","containerRef","rootStyle","layers","rootRest","ParallaxProvider","init","componentDidUpdate","prevProps","componentWillUnmount","render","children"],"sourceRoot":""}