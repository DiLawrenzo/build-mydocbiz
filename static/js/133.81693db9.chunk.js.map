{"version":3,"file":"static/js/133.81693db9.chunk.js","mappings":"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","sources":["components/BackToTop.tsx","components/FAQContent.tsx","components/navbars/Navbar4/Menu.tsx","components/navbars/Navbar4/NotificationDropdown.tsx","components/navbars/Navbar4/ProfileDropdown.tsx","components/navbars/Navbar4/data.ts","components/navbars/Navbar4/index.tsx","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/AccordionBody.js","../node_modules/react-bootstrap/esm/AccordionHeader.js","../node_modules/react-bootstrap/esm/AccordionItem.js","../node_modules/react-bootstrap/esm/Accordion.js","../node_modules/react-bootstrap/esm/AccordionButton.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionItemContext.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport FeatherIcon from 'feather-icons-react';\nimport classNames from 'classnames';\n\ntype BackToTopProps = {\n    variant: string;\n};\n\nconst BackToTop = ({ variant }: BackToTopProps) => {\n    return (\n        <Link\n            className={classNames('btn', 'btn-soft-' + variant, 'shadow-none', 'btn-icon', 'btn-back-to-top')}\n            id=\"btn-back-to-top\"\n            to=\"#\"\n            onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}\n        >\n            <FeatherIcon icon=\"arrow-up\" className=\"icon-xxs\" />\n        </Link>\n    );\n};\n\nBackToTop.defaultProps = {\n    variant: 'primary',\n};\n\nexport default BackToTop;\n","import { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Accordion, AccordionContext, Card, useAccordionButton } from 'react-bootstrap';\nimport FeatherIcon from 'feather-icons-react';\nimport classNames from 'classnames';\n\ntype CustomToggleProps = {\n    children: React.ReactNode;\n    eventKey: string;\n    containerClass: string;\n    linkClass: string;\n    callback?: (eventKey: string) => void;\n};\n\nconst CustomToggle = ({ children, eventKey, containerClass, linkClass, callback }: CustomToggleProps) => {\n    const { activeEventKey } = useContext(AccordionContext);\n\n    const decoratedOnClick = useAccordionButton(eventKey, () => callback && callback(eventKey));\n\n    const isCurrentEventKey = activeEventKey === eventKey;\n\n    return (\n        <Link\n            to=\"#\"\n            className={classNames(linkClass, {\n                collapsed: !isCurrentEventKey,\n            })}\n            onClick={decoratedOnClick}\n        >\n            <Card.Header>\n                <h5 className={containerClass}>\n                    {children} <FeatherIcon icon=\"chevron-down\" className=\"icon-xs accordion-arrow\" />\n                </h5>\n            </Card.Header>\n        </Link>\n    );\n};\n\nconst FAQContent = () => {\n    const faqs = [\n        {\n            question: 'Can the app work on iPhone and iPad?',\n            ans: ' Yes. Visit app.mydocbiz.com on your iPad or iPhone browser.',\n        },\n        {\n            question: 'What if I forget my password?',\n            ans: \"Click on the forgot my password link on the login page and follow the instructions.\",\n        },\n        {\n            question: 'Can I pay for the whole year?',\n            ans: 'Yes. Your payment will be distributed accordingly.',\n        },\n        {\n            question: 'Can I give access to my assistants?',\n            ans: 'You can create separate accounts for your assistants. You can assign specific permissions to them.',\n        },\n        {\n            question: 'How do I access the app on my computer?',\n            ans: 'You can open the link app.mydocbiz.com on your computer browser.',\n        },\n    ];\n\n    return (\n        <div id=\"faqContent\">\n            <Accordion defaultActiveKey=\"0\" className=\"custom-accordionwitharrow\" id=\"accordionExample\">\n                {(faqs || []).map((item, index) => {\n                    return (\n                        <Card className=\"mb-2 border rounded-sm\" key={index.toString()}>\n                            <CustomToggle\n                                eventKey={String(index)}\n                                containerClass=\"my-1 fw-medium\"\n                                linkClass=\"text-dark\"\n                            >\n                                {item.question}\n                            </CustomToggle>\n                            <Accordion.Collapse eventKey={String(index)}>\n                                <Card.Body className=\"text-muted pt-1\">{item.ans}</Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n                    );\n                })}\n            </Accordion>\n        </div>\n    );\n};\n\nexport default FAQContent;\n","import { Nav } from 'react-bootstrap';\nimport { useLocation } from 'react-router-dom';\nimport FeatherIcon from 'feather-icons-react';\nimport classNames from 'classnames';\n\n\n\nconst Menu = () => {\n    let location = useLocation();\n    const isActiveRoute = (path: string) => {\n        if (location.pathname) {\n            return location.pathname.includes(path);\n        }\n        return false;\n    };\n\n    return (\n        <Nav as=\"ul\" className=\"mx-auto\">\n            <Nav.Item as=\"li\" className=\"pe-3\">\n                <Nav.Link href=\"/pages/account/dashboard\" className={classNames('nav-link', ({ ...isActive }) => isActive && 'active')}>\n                    <div className=\"d-flex align-items-center\">\n                        <span className=\"icon-xxs me-1 flex-shrink-0\">\n                            <FeatherIcon icon=\"grid\" className=\"icon-dual-primary\" />\n                        </span>\n                        <div className=\"flex-grow-1\">Home</div>\n                    </div>\n                </Nav.Link>\n            </Nav.Item>\n\n            <Nav.Item as=\"li\" className=\"pe-3\">\n                <Nav.Link href=\"/pages/account/add-post\">\n                    <div className=\"d-flex align-items-center\">\n                        <span className=\"icon-xxs me-1 flex-shrink-0\">\n                            <FeatherIcon icon=\"folder\" className=\"icon-dual-dark\" />\n                        </span>\n                        <div className=\"flex-grow-1\">Add Post</div>\n                    </div>\n                </Nav.Link>\n            </Nav.Item>\n\n            <Nav.Item as=\"li\" className=\"pe-3\">\n                <Nav.Link href=\"/pages/account/settings\">\n                    <div className=\"d-flex align-items-center\">\n                        <span className=\"icon-xxs me-1 flex-shrink-0\">\n                            <FeatherIcon icon=\"tool\" className=\"icon-dual-dark\" />\n                        </span>\n                        <div className=\"flex-grow-1\">Settings</div>\n                    </div>\n                </Nav.Link>\n            </Nav.Item>\n\n            {/* <Nav.Item as=\"li\" className=\"pe-3\">\n                <Nav.Link href=\"/\">\n                    <div className=\"d-flex align-items-center\">\n                        <span className=\"icon-xxs me-1 flex-shrink-0\">\n                            <FeatherIcon icon=\"list\" className=\"icon-dual-dark\" />\n                        </span>\n                        <div className=\"flex-grow-1\">Tasks</div>\n                    </div>\n                </Nav.Link>\n            </Nav.Item>\n\n            <Nav.Item as=\"li\" className=\"pe-3\">\n                <Nav.Link href=\"/\">\n                    <div className=\"d-flex align-items-center\">\n                        <span className=\"icon-xxs me-1 flex-shrink-0\">\n                            <FeatherIcon icon=\"bar-chart-2\" className=\"icon-dual-dark\" />\n                        </span>\n                        <div className=\"flex-grow-1\">Reports</div>\n                    </div>\n                </Nav.Link>\n            </Nav.Item> */}\n        </Nav>\n    );\n};\n\nexport default Menu;\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Dropdown, Nav } from 'react-bootstrap';\nimport FeatherIcon from 'feather-icons-react';\n\n// types\nimport { Notification } from './types';\n\ntype NotificationProps = {\n    notifications: Notification[];\n};\n\nconst NotificationDropdown = ({ notifications }: NotificationProps) => {\n    return (\n        <Dropdown as=\"li\" className=\"nav-item\">\n            <Dropdown.Toggle as={Nav.Link} id=\"notifications\">\n                <span className=\"icon-xs\">\n                    <FeatherIcon icon=\"bell\" className=\"icon-dual-dark\" />\n                </span>\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu className=\"p-2\" renderOnMount>\n                {(notifications || []).map((notification, index) => {\n                    return (\n                        <Dropdown.Item className=\"p-2\" key={index.toString()}>\n                            <div className=\"d-flex align-items-center\">\n                                <span\n                                    className={classNames(\n                                        'bg-soft-' + notification.variant,\n                                        'text-' + notification.variant,\n                                        'avatar',\n                                        'avatar-xs',\n                                        'rounded icon',\n                                        'icon-with-bg',\n                                        'icon-xxs',\n                                        'me-3',\n                                        'flex-shink-0'\n                                    )}\n                                >\n                                    <FeatherIcon\n                                        icon={notification.icon}\n                                        className={classNames('icon-dual-' + notification.variant)}\n                                    />\n                                </span>\n                                <div className=\"flex-grow-1\">\n                                    <h6 className=\"fw-medium my-0 fs-13\">{notification.text}</h6>\n                                    <span className=\"text-muted\">\n                                        <small>{notification.time}</small>\n                                    </span>\n                                </div>\n                            </div>\n                        </Dropdown.Item>\n                    );\n                })}\n                <Link to=\"#\" className=\"btn btn-light btn-sm bg-light text-center fs-13 d-block mt-2\">\n                    View All\n                </Link>\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default NotificationDropdown;\n","import React from 'react';\nimport { Dropdown, Nav } from 'react-bootstrap';\nimport FeatherIcon from 'feather-icons-react';\n\n// images\nimport user from 'assets/images/avatars/img-8.jpg';\n\n// types\nimport { ProfileOption } from './types';\n\ntype ProfileProps = {\n    profileOptions: ProfileOption[];\n};\n\nconst ProfileDropdown = ({ profileOptions }: ProfileProps) => {\n    return (\n        <Dropdown as=\"li\" className=\"nav-item\">\n            <Dropdown.Toggle as={Nav.Link} id=\"user\">\n                <div className=\"d-flex align-items-center\">\n                    <div className=\"flex-shrink-0\">\n                        <img src={user} alt=\"user\" className=\"avatar avatar-xs rounded-circle me-2\" />\n                    </div>\n                    <div className=\"flex-grow-1 ms-1 lh-base\">\n                        <span className=\"fw-semibold fs-13 d-block line-height-normal\">Esther G</span>\n                        <span className=\"text-muted fs-13\">Admin</span>\n                    </div>\n                </div>\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu className=\"p-2\" renderOnMount>\n                {(profileOptions || []).map((profile, index) => {\n                    return (\n                        <React.Fragment key={index.toString()}>\n                            {index === profileOptions.length - 1 && <Dropdown.Divider as=\"div\" />}\n                            <Dropdown.Item className=\"p-2\">\n                                <FeatherIcon icon={profile.icon} className=\"icon icon-xxs me-1 icon-dual\" />\n                                {profile.label}\n                            </Dropdown.Item>\n                        </React.Fragment>\n                    );\n                })}\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default ProfileDropdown;\n","// types\nimport { Notification, ProfileOption } from './types';\n\nconst notifications: Notification[] = [\n    {\n        icon: 'user-plus',\n        variant: 'primary',\n        text: 'New User Registered',\n        time: '2 min ago',\n    },\n    {\n        icon: 'message-square',\n        variant: 'orange',\n        text: 'A new comment on your post',\n        time: '3 min ago',\n    },\n    {\n        icon: 'paperclip',\n        variant: 'success',\n        text: 'A new message from',\n        time: '10 min ago',\n    },\n    {\n        icon: 'heart',\n        variant: 'danger',\n        text: 'A new like on your comment',\n        time: '14 min ago',\n    },\n];\n\nconst profileOptions: ProfileOption[] = [\n    {\n        icon: 'user',\n        label: 'Profile',\n        redirectTo: '#',\n    },\n    {\n        icon: 'settings',\n        label: 'Settings',\n        redirectTo: '/pages/account/settings',\n    },\n    {\n        icon: 'unlock',\n        label: 'Sign Out',\n        redirectTo: '/home',\n    },\n];\n\nexport { notifications, profileOptions };\n","import { Container, Nav, Navbar } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// component\nimport Menu from './Menu';\nimport NotificationDropdown from './NotificationDropdown';\nimport ProfileDropdown from './ProfileDropdown';\n\n// dummy data\nimport { notifications, profileOptions } from './data';\n\n// images\nimport logo from 'assets/images/logo.png';\nimport logoLight from 'assets/images/logo-light.png';\n\ntype Navbar4Props = {\n    isSticky?: boolean;\n    navClass?: string;\n    fixedWidth?: boolean;\n};\n\nconst Navbar4 = ({ isSticky, navClass, fixedWidth }: Navbar4Props) => {\n    return (\n        <header>\n            <Navbar\n                id={isSticky ? 'sticky' : ''}\n                collapseOnSelect\n                expand=\"lg\"\n                className={classNames('topnav-menu', navClass)}\n            >\n                <Container fluid={!fixedWidth}>\n                    <Navbar.Brand href=\"/\" className=\"logo\">\n                        <img src={logo} height=\"30\" className=\"align-top logo-dark\" alt=\"\" />\n                        <img src={logoLight} height=\"30\" className=\"align-top logo-light\" alt=\"\" />\n                    </Navbar.Brand>\n\n                    <Navbar.Toggle className=\"me-3\" aria-controls=\"topnav-menu-content4\" />\n\n                    <Navbar.Collapse id=\"topnav-menu-content4\">\n                        <Menu />\n                        <Nav as=\"ul\" className=\"align-items-lg-center\">\n                            <NotificationDropdown notifications={notifications} />\n                            <ProfileDropdown profileOptions={profileOptions} />\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    );\n};\n\nexport default Navbar4;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});","import * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n\n    onSelect == null ? void 0 : onSelect(eventKeyPassed, e);\n    onClick == null ? void 0 : onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","import * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["BackToTop","variant","className","classNames","id","to","onClick","window","scrollTo","top","behavior","icon","defaultProps","CustomToggle","children","eventKey","containerClass","linkClass","callback","activeEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionButton","isCurrentEventKey","collapsed","defaultActiveKey","question","ans","map","item","index","String","toString","useLocation","Nav","as","href","notifications","Dropdown","renderOnMount","notification","text","time","profileOptions","src","user","alt","profile","length","label","redirectTo","isSticky","navClass","fixedWidth","Navbar","collapseOnSelect","expand","Container","fluid","logo","height","logoLight","AccordionCollapse","React","ref","Component","bsPrefix","props","useBootstrapPrefix","_jsx","Collapse","in","isAccordionItemSelected","displayName","AccordionBody","AccordionItemContext","AccordionHeader","AccordionButton","AccordionItem","contextValue","useMemo","value","Accordion","useUncontrolled","activeKey","onSelect","flush","alwaysOpen","controlledProps","prefix","Object","assign","Button","Item","Header","Body","e","eventKeyPassed","Array","isArray","includes","filter","k","accordionOnClick","type","context","CardImg","CardHeader","cardHeaderBsPrefix","CardHeaderContext","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","border","body","Img","Title","Subtitle","Link","Text","Footer","ImgOverlay"],"sourceRoot":""}