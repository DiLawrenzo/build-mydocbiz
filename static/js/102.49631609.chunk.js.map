{"version":3,"file":"static/js/102.49631609.chunk.js","mappings":"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","sources":["components/FloatRight.tsx","pages/other/Contact/Hero.tsx","components/form/FormInput.tsx","pages/other/Contact/ContactUs.tsx","pages/other/Contact/index.tsx"],"sourcesContent":["import facebook from \"assets/images/icons/facebook-circle.png\";\r\nimport twitter from \"assets/images/icons/twitter-circle.png\";\r\nimport linkedin from \"assets/images/icons/linkedin-circle.png\";\r\nimport instagram from \"assets/images/icons/instagram-circle.png\";\r\n\r\ntype BackToTopProps = {\r\n    variant: string;\r\n};\r\n\r\nconst FloatRight = ({ variant }: BackToTopProps) => {\r\n    return (\r\n        <div className=\"sticky-container\">\r\n            <ul className=\"sticky\">\r\n                <li>\r\n                    <img src={facebook} width=\"32\" height=\"32\" alt=\"facebook-icon\"/>\r\n                    <p><a href=\"https://www.facebook.com/mydocbiz\" target=\"_blank\" rel=\"noreferrer\">Like Us on<br/>Facebook</a></p>\r\n                </li>\r\n                <li>\r\n                    <img src={twitter} width=\"32\" height=\"32\" alt=\"twitter-icon\"/>\r\n                    <p><a href=\"https://twitter.com/MyDocBiz1\" target=\"_blank\" rel=\"noreferrer\">Follow Us on<br/>Twitter</a></p>\r\n                </li>\r\n                <li>\r\n                    <img src={linkedin} width=\"32\" height=\"32\" alt=\"linkedin-icon\"/>\r\n                    <p><a href=\"https://www.linkedin.com/company/mydocbiz\" target=\"_blank\" rel=\"noreferrer\">Follow Us on<br/>LinkedIn</a></p>\r\n                </li>\r\n                <li>\r\n                    <img src={instagram} width=\"32\" height=\"32\" alt=\"instagram-icon\"/>\r\n                    <p><a href=\"https://www.instagram.com/mydoc.biz/\" target=\"_blank\" rel=\"noreferrer\">Follow us on<br/>Instagram</a></p>\r\n                </li>\r\n                \r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nFloatRight.defaultProps = {\r\n    variant: 'primary',\r\n};\r\n\r\nexport default FloatRight;\r\n","import { Col, Container, Row } from 'react-bootstrap';\n\nconst Hero = () => {\n    return (\n        <section className=\"hero-4 pt-lg-6 pb-sm-9 pb-6 pt-9\">\n            <Container>\n                <Row className=\"justify-content-center\">\n                    <Col lg={7} className=\"text-center\">\n                        <h1 className=\"hero-title mb-0\">Contact Us</h1>\n                        <p className=\"mb-4 fs-17 text-muted\">\n                            Please fill out the following form and we will get back to you shortly\n                        </p>\n                    </Col>\n                </Row>\n            </Container>\n            <div className=\"shape bottom\">\n                <svg\n                    width=\"1440px\"\n                    height=\"40px\"\n                    viewBox=\"0 0 1440 40\"\n                    version=\"1.1\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <g id=\"shape-b\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                        <g id=\"curve\" fill=\"#fff\">\n                            <path\n                                d=\"M0,30.013 C239.659,10.004 479.143,0 718.453,0 C957.763,0 1198.28,10.004 1440,30.013 L1440,40 L0,40 L0,30.013 Z\"\n                                id=\"Path\"\n                            ></path>\n                        </g>\n                    </g>\n                </svg>\n            </div>\n        </section>\n    );\n};\n\nexport default Hero;\n","import React, { InputHTMLAttributes } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\n\nimport { FieldErrors, Control } from 'react-hook-form';\n\ninterface FormInputProps extends InputHTMLAttributes<HTMLInputElement> {\n    startIcon?: React.ReactNode;\n    label?: string;\n    type?: string;\n    name: string;\n    comp?: string;\n    placeholder?: string;\n    register?: any;\n    errors?: FieldErrors;\n    control?: Control<any>;\n    className?: string;\n    labelClassName?: string;\n    containerClass?: string;\n    textClassName?: string;\n    refCallback?: any;\n    action?: React.ReactNode;\n    rows?: string | number;\n}\n\n// textual form-controls—like inputs, passwords, textareas etc.\nconst TextualInput = ({\n    type,\n    name,\n    placeholder,\n    register,\n    errors,\n    comp,\n    rows,\n    className,\n    refCallback,\n    ...otherProps\n}: FormInputProps) => {\n    return (\n        <>\n            <Form.Control\n                type={type}\n                placeholder={placeholder}\n                name={name}\n                as={comp}\n                id={name}\n                ref={(r: HTMLInputElement) => {\n                    if (refCallback) refCallback(r);\n                }}\n                className={className}\n                isInvalid={errors && errors[name] ? true : false}\n                {...(register ? register(name) : {})}\n                rows={rows}\n                {...otherProps}\n            ></Form.Control>\n\n            {errors && errors[name] && (\n                <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                    {errors[name]['message']}\n                </Form.Control.Feedback>\n            )}\n        </>\n    );\n};\n\n// non-textual checkbox and radio controls\nconst CheckInput = ({\n    type,\n    label,\n    name,\n    placeholder,\n    register,\n    errors,\n    comp,\n    rows,\n    className,\n    refCallback,\n    ...otherProps\n}: FormInputProps) => {\n    return (\n        <>\n            <Form.Check\n                type={type}\n                label={label}\n                name={name}\n                id={name}\n                ref={(r: HTMLInputElement) => {\n                    if (refCallback) refCallback(r);\n                }}\n                className={className}\n                isInvalid={errors && errors[name] ? true : false}\n                {...(register ? register(name) : {})}\n                {...otherProps}\n            />\n\n            {errors && errors[name] && (\n                <Form.Control.Feedback type=\"invalid\">{errors[name]['message']}</Form.Control.Feedback>\n            )}\n        </>\n    );\n};\n\n// handle select controls\nconst SelectInput = ({\n    type,\n    label,\n    name,\n    placeholder,\n    register,\n    errors,\n    comp,\n    rows,\n    className,\n    refCallback,\n    ...otherProps\n}: FormInputProps) => {\n    return (\n        <>\n            <Form.Select\n                type={type}\n                label={label}\n                name={name}\n                id={name}\n                ref={(r: HTMLInputElement) => {\n                    if (refCallback) refCallback(r);\n                }}\n                className={className}\n                isInvalid={errors && errors[name] ? true : false}\n                {...(register ? register(name) : {})}\n                {...otherProps}\n            />\n\n            {errors && errors[name] && (\n                <Form.Control.Feedback type=\"invalid\">{errors[name]['message']}</Form.Control.Feedback>\n            )}\n        </>\n    );\n};\n\n// extend textual form-controls with add-ons\nconst FormInputGroup = ({\n    startIcon,\n    type,\n    name,\n    placeholder,\n    comp,\n    register,\n    errors,\n    rows,\n    className,\n    textClassName,\n    refCallback,\n    ...otherProps\n}: FormInputProps) => {\n    return (\n        <InputGroup>\n            <InputGroup.Text className={textClassName}>{startIcon}</InputGroup.Text>\n            {type === 'select' ? (\n                <SelectInput\n                    type={type}\n                    name={name}\n                    placeholder={placeholder}\n                    refCallback={refCallback}\n                    comp={comp}\n                    errors={errors}\n                    register={register}\n                    className={className}\n                    rows={rows}\n                    {...otherProps}\n                />\n            ) : (\n                <TextualInput\n                    type={type}\n                    name={name}\n                    placeholder={placeholder}\n                    refCallback={refCallback}\n                    comp={comp}\n                    errors={errors}\n                    register={register}\n                    className={className}\n                    rows={rows}\n                    {...otherProps}\n                />\n            )}\n        </InputGroup>\n    );\n};\n\nconst FormInput = ({\n    startIcon,\n    label,\n    type,\n    name,\n    placeholder,\n    register,\n    errors,\n    control,\n    className,\n    labelClassName,\n    containerClass,\n    textClassName,\n    refCallback,\n    action,\n    rows,\n    ...otherProps\n}: FormInputProps) => {\n    // handle input type\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : 'input';\n\n    return (\n        <>\n            {type === 'hidden' ? (\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\n            ) : (\n                <>\n                    {type === 'checkbox' || type === 'radio' ? (\n                        <Form.Group className={containerClass}>\n                            <CheckInput\n                                type={type}\n                                label={label}\n                                name={name}\n                                placeholder={placeholder}\n                                refCallback={refCallback}\n                                errors={errors}\n                                register={register}\n                                comp={comp}\n                                className={className}\n                                rows={rows}\n                                {...otherProps}\n                            />\n                        </Form.Group>\n                    ) : type === 'select' ? (\n                        <Form.Group className={containerClass}>\n                            {label && (\n                                <>\n                                    <Form.Label className={labelClassName}>{label}</Form.Label>\n                                    {action && action}\n                                </>\n                            )}\n                            {startIcon ? (\n                                <FormInputGroup\n                                    type={type}\n                                    startIcon={startIcon}\n                                    name={name}\n                                    comp={comp}\n                                    textClassName={textClassName}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors}\n                                    register={register}\n                                    className={className}\n                                    rows={rows}\n                                    {...otherProps}\n                                />\n                            ) : (\n                                <SelectInput\n                                    type={type}\n                                    name={name}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors}\n                                    register={register}\n                                    comp={comp}\n                                    className={className}\n                                    rows={rows}\n                                    {...otherProps}\n                                />\n                            )}\n                        </Form.Group>\n                    ) : (\n                        <Form.Group className={containerClass}>\n                            {label && (\n                                <>\n                                    <Form.Label className={labelClassName}>{label}</Form.Label>\n                                    {action && action}\n                                </>\n                            )}\n                            {startIcon ? (\n                                <FormInputGroup\n                                    type={type}\n                                    startIcon={startIcon}\n                                    name={name}\n                                    comp={comp}\n                                    textClassName={textClassName}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors}\n                                    register={register}\n                                    className={className}\n                                    rows={rows}\n                                    {...otherProps}\n                                />\n                            ) : (\n                                <TextualInput\n                                    type={type}\n                                    name={name}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors}\n                                    register={register}\n                                    comp={comp}\n                                    className={className}\n                                    rows={rows}\n                                    {...otherProps}\n                                />\n                            )}\n                        </Form.Group>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default FormInput;\n","// @ts-nocheck\r\nimport { Button, Card, Col, Container, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n// import GoogleMapReact from 'google-map-react';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport FeatherIcon from 'feather-icons-react';\r\n// hooks\r\nimport { useSendEmail } from '../../../hooks/auth';\r\n\r\n// components\r\nimport { FormInput } from 'components/form';\r\nimport desktop1 from 'assets/images/other/marketing.png';\r\n\r\ntype UserData = {\r\n    fname: string;\r\n    lname: string;\r\n    email: string;\r\n    message: string;\r\n};\r\n\r\nconst ContactUs = () => {\r\n    const [sendMail] = useSendEmail();\r\n\r\n    // form validation schema\r\n    const schemaResolver = yupResolver(\r\n        yup.object().shape({\r\n            fname: yup.string().required('Please enter first name'),\r\n            lname: yup.string().required('Please enter last name'),\r\n            email: yup.string().required('Please enter Email').email('Please enter valid Email'),\r\n            message: yup.string().required('Please enter Message'),\r\n        })\r\n    );\r\n\r\n    // form method\r\n    const methods = useForm({ resolver: schemaResolver });\r\n    const {\r\n        handleSubmit,\r\n        register,\r\n        control,\r\n        formState: { errors },\r\n    } = methods;\r\n\r\n    // handle form submission\r\n    const onSubmit = ((formData: UserData) => {\r\n        sendMail!({ fname: formData['fname'], lname: formData['lname'], email: formData['email'], message: formData['message'] });\r\n    });\r\n\r\n    return (\r\n        <section className=\"section pb-lg-7 py-4 position-relative\">\r\n            <Container>\r\n                <Row className=\"align-items-center\">\r\n                    <Col lg={6}>\r\n                        <Card className=\"shadow-none\">\r\n                            <Card.Body className=\"p-xl-5 p-0\">\r\n                                <h2 className=\"mb-2 mt-0 fw-medium\">Let's Talk Further</h2>\r\n                                <p className=\"mb-5\">\r\n                                    Please fill out the following form and we will get back to you shortly\r\n                                </p>\r\n\r\n                                <form onSubmit={handleSubmit(onSubmit)}>\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <FormInput\r\n                                                type=\"text\"\r\n                                                name=\"fname\"\r\n                                                label=\"First Name\"\r\n                                                placeholder=\"Your First Name\"\r\n                                                containerClass={'mb-3'}\r\n                                                register={register}\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col md={6}>\r\n                                            <FormInput\r\n                                                type=\"text\"\r\n                                                name=\"lname\"\r\n                                                label=\"Last Name\"\r\n                                                placeholder=\"Your Last Name\"\r\n                                                containerClass={'mb-3'}\r\n                                                register={register}\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col lg={12}>\r\n                                            <FormInput\r\n                                                type=\"email\"\r\n                                                name=\"email\"\r\n                                                label=\"Email Name\"\r\n                                                placeholder=\"Your Email\"\r\n                                                containerClass={'mb-3'}\r\n                                                register={register}\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col lg={12}>\r\n                                            <FormInput\r\n                                                type=\"textarea\"\r\n                                                name=\"message\"\r\n                                                label=\"Message\"\r\n                                                placeholder=\"Type Your message...\"\r\n                                                rows={5}\r\n                                                containerClass={'mb-3'}\r\n                                                register={register}\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col lg=\"auto\" className=\"mb-0\">\r\n                                            <Button type=\"submit\">\r\n                                                Send\r\n                                                <span className=\"icon icon-xs text-white ms-1\">\r\n                                                    <FeatherIcon icon=\"send\" />\r\n                                                </span>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </form>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col lg={{ offset: 1, span: 5 }}>\r\n                        <div style={{ height: 'auto' }}>\r\n                            {/* <GoogleMapReact defaultZoom={12} defaultCenter={{ lat: 40.749179, lng: -73.989276 }} /> */}\r\n                            <img\r\n                                src={desktop1}\r\n                                alt=\"desktop1\"\r\n                                className=\"img-fluid\"\r\n                                data-aos=\"fade-left\"\r\n                                data-aos-duration=\"700\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mt-5 align-items-center\">\r\n                    <Col md={4}>\r\n                        <div className=\"d-flex px-md-1 px-lg-5 mb-md-0 mb-3\">\r\n                            <span className=\"bg-soft-primary avatar avatar-sm rounded icon icon-with-bg icon-xs text-primary me-3 flex-shrink-0\">\r\n                                <FeatherIcon icon=\"mail\" className=\"icon-dual-primary\" />\r\n                            </span>\r\n                            <div className=\"flex-grow-1\">\r\n                                <h5 className=\"m-0 fw-medium\">Email</h5>\r\n                                <Link to=\"#\" className=\"text-muted fw-normal h5 my-1\">\r\n                                    support@mydocbiz.com\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n\r\n                    <Col md={4}>\r\n                        <div className=\"d-flex px-md-1 px-lg-5 mb-md-0 mb-3\">\r\n                            <span className=\"bg-soft-primary avatar avatar-sm rounded icon icon-with-bg icon-xs text-orange me-3 flex-shrink-0\">\r\n                                <FeatherIcon icon=\"phone-call\" className=\"icon-dual-primary\" />\r\n                            </span>\r\n                            <div className=\"flex-grow-1\">\r\n                                <h5 className=\"m-0 fw-medium\">Phone</h5>\r\n                                <Link to=\"#\" className=\"text-muted fw-normal h5 my-1\">\r\n                                    +254 704 322 687\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n\r\n                    <Col md={4}>\r\n                        <div className=\"d-flex px-md-1 px-lg-5 mb-md-0 mb-3\">\r\n                            <span className=\"bg-soft-primary avatar avatar-sm rounded icon icon-with-bg icon-xs text-info me-3 flex-shrink-0\">\r\n                                <FeatherIcon icon=\"map-pin\" className=\"icon-dual-primary\" />\r\n                            </span>\r\n                            <div className=\"flex-grow-1\">\r\n                                <h5 className=\"m-0 fw-medium\">Address</h5>\r\n                                <Link to=\"#\" className=\"text-muted fw-normal h5 my-1\">\r\n                                    Nairobi, Kenya (East Africa)\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default ContactUs;\r\n","// components\nimport { Navbar1 } from 'components/navbars';\nimport BackToTop from 'components/BackToTop';\nimport FloatRight from 'components/FloatRight';\nimport { Footer1 } from 'components/footer';\n\nimport Hero from './Hero';\nimport ContactUs from './ContactUs';\n\nconst Contact = () => {\n    return (\n        <>\n            <div className=\"header-7 bg-gradient6\">\n                <Navbar1\n                    hideSearch\n                    fixedWidth\n                    navClass=\"navbar-light zindex-10\"\n                    buttonClass=\"btn-primary btn-sm\"\n                />\n\n                <Hero />\n            </div>\n\n            {/* contact us */}\n            <ContactUs />\n\n            {/* footer */}\n            <Footer1 />\n\n            <BackToTop />\n            <FloatRight />\n        </>\n    );\n};\n\nexport default Contact;\n"],"names":["FloatRight","variant","className","src","facebook","width","height","alt","href","target","rel","twitter","linkedin","instagram","defaultProps","Container","Row","Col","lg","viewBox","version","xmlns","id","stroke","strokeWidth","fill","fillRule","d","TextualInput","type","name","placeholder","register","errors","comp","rows","refCallback","otherProps","Form","as","ref","r","isInvalid","CheckInput","label","SelectInput","FormInputGroup","startIcon","textClassName","InputGroup","control","labelClassName","containerClass","action","useSendEmail","sendMail","schemaResolver","yupResolver","yup","shape","fname","required","lname","email","message","methods","useForm","resolver","handleSubmit","formState","Card","onSubmit","formData","md","Button","icon","offset","span","style","desktop1","to","hideSearch","fixedWidth","navClass","buttonClass","BackToTop"],"sourceRoot":""}